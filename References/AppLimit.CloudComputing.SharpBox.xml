<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AppLimit.CloudComputing.SharpBox</name>
    </assembly>
    <members>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession">
            <summary> 
            This interface is part of the managed storage provider API 
            and implements an authenticated session
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession.SessionToken">
            <summary>
            The generated access token for this 
            session
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession.Service">
            <summary>
            The associated service which is connected
            with this session
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession.ServiceConfiguration">
            <summary>
            A valid cloud storage service configuration
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService">
            <summary>
            This class has to be used in combination with the GenericStorageProvider class
            and supports all generic logic on the service level
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService">
            <summary>
            This interface is part of the sharpbox extensability api
            and has to be implemented as main entry point for an 
            existing service
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.VerifyAccessTokenType(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            Checks if the given token are valid for using with this
            service
                    
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.CreateSession(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration)">
            <summary>
            establishing a new session via access token 
            </summary>
            <param name="token"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.CloseSession(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession)">
            <summary>
            This method closes a created session
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.RequestResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            Requests all resource information via webcall
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.RefreshResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method refreshes the metadata of an resource
            </summary>
            <param name="session"></param>
            <param name="resource"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.CreateResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            Creates or updates a resource via webcall 
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.DeleteResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            Removes a specific resource from the web location
            </summary>
            <param name="session"></param>
            <param name="entry"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.MoveResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            Moves a give resource from one location to an other
            </summary>
            <param name="session"></param>
            <param name="fsentry"></param>
            <param name="newParent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.RenameResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            Renames a give resource
            </summary>
            <param name="session"></param>
            <param name="fsentry"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.StoreToken(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.Collections.Generic.Dictionary{System.String,System.String},AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            Receives the information which are stored in a token
            </summary>
            <param name="session"></param>
            <param name="tokendata"></param>
            <param name="token"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.LoadToken(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Loads the information from a token stream 
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.GetResourceUrl(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            The method returns the url to a specific resource
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="additionalPath"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.DownloadResourceContent(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.IO.Stream,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged,System.Object)">
            <summary>
            This interface implements the download code
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="targetDataStream"></param>
            <param name="progressCallback"></param>
            <param name="progressContext"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.CreateDownloadStream(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            Allows the access to the download stream directly
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.CommitStreamOperation(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.nTransferDirection,System.IO.Stream)">
            <summary>
            This method is called when the stream operation is finished but before the 
            dispose method of the stream will be called
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="Direction"></param>
            <param name="NotDisposedStream"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.UploadResourceContent(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.IO.Stream,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged,System.Object)">
            <summary>
            This interface implements the upload code
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="targetDataStream"></param>
            <param name="progressCallback"></param>
            <param name="progressContext"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService.CreateUploadStream(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.Int64)">
            <summary>
            Allows the access to the upload stream directly
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="uploadSize"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.VerifyAccessTokenType(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            This method verifies if the given configuration is compatible to the implemented
            service provider.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.CreateSession(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration)">
            <summary>
            This method generates a session to a webdav share via access token
            </summary>
            <param name="token"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.CloseSession(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession)">
            <summary>
            This method closes the session
            </summary>
            <param name="session"></param>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.RequestResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method request a directory entry from the storage provider service
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.RefreshResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method updates the locally cache resource metadata from the storage service
            </summary>
            <param name="session"></param>
            <param name="resource"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.DeleteResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method removes a resource in the storage provider service
            </summary>
            <param name="session"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.MoveResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method deletes a resource in the storage provider service
            </summary>
            <param name="session"></param>
            <param name="fsentry"></param>
            <param name="newParent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.StoreToken(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.Collections.Generic.Dictionary{System.String,System.String},AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            Writes a generic token onto the storage collection
            </summary>
            <param name="session"></param>
            <param name="tokendata"></param>
            <param name="token"></param>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.LoadToken(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Reads the token information
            </summary>        
            <param name="tokendata"></param>
            <returns></returns>       
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.GetResourceUrl(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            This method build up a valid resource url
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="additionalPath"></param>
            <returns></returns>       
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.DownloadResourceContent(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.IO.Stream,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged,System.Object)">
            <summary>
            This methid download the content of a file resource into a target download stream 
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="targetDataStream"></param>
            <param name="progressCallback"></param>
            <param name="progressContext"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.CreateDownloadStream(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method establishes a download stream with the storage service
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.CreateUploadStream(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.Int64)">
            <summary>
            This method establishes an upload stream with the storage service
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="uploadSize"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.CommitStreamOperation(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.nTransferDirection,System.IO.Stream)">
            <summary>
            This method commits a stream operation before the disposabl method of the stream will be called 
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="Direction"></param>
            <param name="NotDisposedStream"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.UploadResourceContent(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.IO.Stream,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged,System.Object)">
            <summary>
            This method uploads data into a file resource 
            </summary>
            <param name="session"></param>
            <param name="fileSystemEntry"></param>
            <param name="targetDataStream"></param>
            <param name="progressCallback"></param>
            <param name="progressContext"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.CreateResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This methid creates a directory object in the storage service 
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProviderService.RenameResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            This method renames a resource in the storage service
            </summary>
            <param name="session"></param>
            <param name="fsentry"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration">
            <summary>
            This interface has to be implemented from storage providers to support 
            access configuration information. Consumers of this library has to create 
            an instance of a provider specific implementation to build up a connection 
            to the CloudStorage
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration.ServiceLocator">
            <summary>
            Contains the url of the specific service which will be used from 
            storage service provider
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration.TrustUnsecureSSLConnections">
            <summary>
            If true this value indicates the all ssl connection are valid. This means also ssl connection
            with an invalid certificate will be accepted.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration.Limits">
            <summary>
            Contains the limits of a specific cloud storage connection
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.CreateWebRequest(System.String,System.String,System.Net.ICredentials,System.Boolean,System.Object)">
            <summary>
            This method generates a new webrequest and instruments the stopwatch
            counter
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="credentials"></param>
            <param name="bAllowStreamBuffering"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.CreateWebRequest(System.String,System.String,System.Net.ICredentials,System.Boolean,System.Object,AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.CreateWebRequestPreparationCallback)">
            <summary>
            Internal web request generator
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="credentials"></param>
            <param name="bAllowStreamBuffering"></param>
            <param name="context"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.CreateBasicWebRequest(System.Uri,System.Boolean)">
            <summary>
            Please implement this method for the right WebRequest type
            </summary>
            <param name="uri"></param>
            <param name="bAllowStreamBuffering"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.GetRequestStream(System.Net.WebRequest,System.Int64)">
            <summary>
            This method returns a webrequest data stream and should be used in 
            a using clause
            </summary>
            <param name="request"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.DisposeWebRequestStreams(System.Object[])">
            <summary>
            This method contains the routine which has to be executed when a request 
            stream will be disposed and will be called autoamtically
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.GetWebResponse(System.Net.WebRequest)">
            <summary>
            This method returns a webresponse or throws an exception. In the case of an 
            exception the stop watch is stop here
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.GetResponseStream(System.Net.WebResponse)">
            <summary>
            This method returns an response stream 
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.DisposeWebResponseStreams(System.Net.WebResponse,AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebResponseStream)">
            <summary>
            This method executes alle dispose code for webresponse streams
            </summary>
            <param name="response"></param>
            <param name="stream"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.GetWebResponseStatus(System.Net.WebResponse)">
            <summary>
            Please override this method to ensure that the system can evaluate the 
            protocol specific error code
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.PerformWebRequest(System.Net.WebRequest,System.Object)">
            <summary>
            Performs a five webrequest and returns the result as an in memory stream
            </summary>
            <param name="request"></param>
            <param name="context"></param>
            <returns></returns>         
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.PerformWebRequest(System.Net.WebRequest,System.Object,System.Int32@,System.Net.WebException@)">
            <summary>
            Performs a five webrequest and returns the result as an in memory stream
            </summary>
            <param name="request"></param>
            <param name="context"></param>
            <param name="ProtocolSpecificStatusCode"></param>
            <param name="errorInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.PerformWebRequest(System.Net.WebRequest,System.Object,System.IO.Stream,System.Int32@,System.Net.WebException@,System.Net.WebHeaderCollection@)">
            <summary>
            Performs a five webrequest and returns the result as an in memory stream
            </summary>
            <param name="request"></param>
            <param name="context"></param>
            <param name="content"></param>
            <param name="ProtocolSpecificStatusCode"></param>
            <param name="errorInfo"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.PerformSimpleWebCall(System.String,System.String,System.Net.ICredentials,System.Object)">
            <summary>
            Forms a webrequest and performs them. The result will generated as memory stream
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="credentials"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.PerformSimpleWebCall(System.String,System.String,System.Net.ICredentials,System.Object,System.Int32@,System.Net.WebException@)">
            <summary>
            Forms a webrequest and performs them. The result will generated as memory stream 
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="credentials"></param>
            <param name="context"></param>
            <param name="code"></param>
            <param name="errorInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.PerformSimpleWebCall(System.String,System.String,System.Net.ICredentials,System.IO.Stream,System.Object,System.Int32@,System.Net.WebException@)">
            <summary>
            Forms a webrequest and performs them. The result will generated as memory stream 
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="credentials"></param>
            <param name="content"></param>
            <param name="context"></param>
            <param name="code"></param>
            <param name="errorInfo"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.CreateWebRequestMultiPartUpload(System.String,System.Net.ICredentials)">
            <summary>
            This method implements a standard multipart/form-data upload and can be overriden 
            e.g. for WebDav upload
            </summary>
            <param name="url"></param>        
            <param name="credentials"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestService.CreateWebRequestPreparationCallback">
            <summary>
            The callback 
            </summary>
            <param name="request"></param>
            <param name="context"></param>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.CloudStorage">
            <summary>
            The class CloudStorage implements all needed methods to get access
            to a supported cloud storage infrastructure. The following vendors
            are currently supported:
            
             - DropBox
             
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.ICloudStorageAsyncInterface">
            <summary>
            This interface defines all methods which has to be implemented 
            to support asynchoniously I/O, e.g. for WP7
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudStorageAsyncInterface.BeginOpenRequest(System.AsyncCallback,AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration,AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            The BeginOpenRequest-Method starts the authentication process of a given user with the
            configured cloud storage service. After finishing this process in the background
            the callback delegate will be executed. Please use EndOpenRequest in the callback 
            delegate
            </summary>
            <param name="callback">Delegate which will be called when the background action is finished</param>
            <param name="configuration">The configuration information of the cloud storage service</param>
            <param name="token">The credential token of the user which has to be authenticated</param>
            <returns>The asyncresult is the entry point to all generated results</returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudStorageAsyncInterface.EndOpenRequest(System.IAsyncResult)">
            <summary>
            The EndOpenRequest method will finish a started async call. Please use this
            method in the callback delegate.
            </summary>
            <param name="asyncResult">The result reference generated by BeginOpenRequest</param>
            <returns>The generated cloud access token</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudStorageAsyncInterface.BeginGetChildsRequest(System.AsyncCallback,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            The BeginGetChildsRequest-Method starts retrieving the list of childs of a given
            parent container. This procedure can take a while if some information has to 
            be requested from the network
            </summary>
            <param name="callback"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudStorageAsyncInterface.EndGetChildsRequest(System.IAsyncResult)">
            <summary>
            The EndGetChildsRequest-Method will finish a started async call. Please use this
            method in the callback delegate.
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudStorageAsyncInterface.BeginGetRootRequest(System.AsyncCallback)">
            <summary>
            The begin routine the receive the root element from cloud storage
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudStorageAsyncInterface.EndGetRootRequest(System.IAsyncResult)">
            <summary>
            The end routine the receive the root element
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFolder(System.String)">
            <summary>
            This method returns access ro a specific subfolder addressed via 
            unix like file system path, e.g. /Public/SubFolder/SubSub
            
            Valid Exceptions are:
             SharpBoxException(nSharpBoxErrorCodes.ErrorInvalidFileOrDirectoryName);
             SharpBoxException(nSharpBoxErrorCodes.ErrorFileNotFound);
            </summary>
            <param name="path">The path to the target subfolder</param>
            <returns>Reference to the searched folder</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFolder(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method returns access ro a specific subfolder addressed via 
            unix like file system path, e.g. SubFolder/SubSub
            
            Valid Exceptions are:
             SharpBoxException(nSharpBoxErrorCodes.ErrorInvalidFileOrDirectoryName);
             SharpBoxException(nSharpBoxErrorCodes.ErrorFileNotFound);
            </summary>
            <param name="path">The path to the target subfolder</param>
            <param name="parent">A reference to the parent when a relative path was given</param>
            <returns>Reference to the searched folder</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFolder(System.String,System.Boolean)">
            <summary>
            This method returns a folder without thrown an exception in the case of an error
            </summary>
            <param name="path"></param>
            <param name="throwException"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFolder(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.Boolean)">
            <summary>
            This method ...
            </summary>
            <param name="path"></param>
            <param name="startFolder"></param>
            <param name="throwException"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFile(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method returns access to a specific file addressed via 
            unix like file system path, e.g. /Public/SubFolder/SubSub
            
            Valid Exceptions are:
             SharpBoxException(nSharpBoxErrorCodes.ErrorInvalidFileOrDirectoryName);
             SharpBoxException(nSharpBoxErrorCodes.ErrorFileNotFound);
            </summary>
            <param name="path">The path to the target subfolder</param>
            <param name="startFolder">The startfolder for the searchpath</param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DownloadFile(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.String,System.String)">
            <summary>
            This functions allows to download a specific file
                    
            Valid Exceptions are:        
             SharpBoxException(nSharpBoxErrorCodes.ErrorFileNotFound);
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <param name="targetPath"></param>        
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DownloadFile(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.String,System.String,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged)">
            <summary>
            This functions allows to download a specific file
                    
            Valid Exceptions are:        
             SharpBoxException(nSharpBoxErrorCodes.ErrorFileNotFound);
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <param name="targetPath"></param>
            <param name="delProgress"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DownloadFile(System.String,System.String)">
            <summary>
            This function allows to download a specific file
            </summary>
            <param name="filePath"></param>
            <param name="targetPath"></param>        
            <returns></returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DownloadFile(System.String,System.String,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged)">
            <summary>
            This function allows to download a specific file
            </summary>
            <param name="filePath"></param>
            <param name="targetPath"></param>
            <param name="delProgress"></param>
            <returns></returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DownloadFile(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.IO.Stream)">
            <summary>
            This method returns a data stream which allows to downloads the 
            file data
            </summary>
            <param name="name"></param>
            <param name="parent"></param>
            <param name="targetStream"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This function allowes to upload a local file
            </summary>
            <param name="filePath"></param>
            <param name="targetContainer"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged)">
            <summary>
            This function allowes to upload a local file
            </summary>
            <param name="filePath"></param>
            <param name="targetContainer"></param>
            <param name="delProgress"></param>
            <returns></returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.String)">
            <summary>
            This function allowes to upload a local file. Remote file will be created with the name specifed by
            the targetFileName argument
            </summary>
            <param name="filePath"></param>
            <param name="targetContainer"></param>
            <param name="targetFileName"></param>        
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.String,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged)">
            <summary>
            This function allowes to upload a local file. Remote file will be created with the name specifed by
            the targetFileName argument
            </summary>
            <param name="filePath"></param>
            <param name="targetContainer"></param>
            <param name="targetFileName"></param>
            <param name="delProgress"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,System.String)">
            <summary>
            This function allows to upload a local file
            </summary>
            <param name="filePath"></param>
            <param name="targetDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,System.String,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged)">
            <summary>
            This function allows to upload a local file
            </summary>
            <param name="filePath"></param>
            <param name="targetDirectory"></param>
            <param name="delProgress"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,System.String,System.String)">
            <summary>
            This function allows to upload a local file. Remote file will be created with the name specifed by
            the targetFileName argument
            </summary>
            <param name="filePath"></param>
            <param name="targetDirectory"></param>
            <param name="targetFileName"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.String,System.String,System.String,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged)">
            <summary>
            This function allows to upload a local file. Remote file will be created with the name specifed by
            the targetFileName argument
            </summary>
            <param name="filePath"></param>
            <param name="targetDirectory"></param>
            <param name="targetFileName"></param>
            <param name="delProgress"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.IO.Stream,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged)">
            <summary>
            This method allows to upload the data from a given filestream into a target file
            </summary>
            <param name="uploadDataStream"></param>
            <param name="targetFileName"></param>
            <param name="targetContainer"></param>
            <param name="delProgress"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.UploadFile(System.IO.Stream,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method allows to upload the data from a given filestream into a target file
            </summary>
            <param name="uploadDataStream"></param>
            <param name="targetFileName"></param>
            <param name="targetContainer"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.CreateFolder(System.String)">
            <summary>
            This function allows to create full folder pathes in the cloud storage
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.CreateFolderEx(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This function allows to create full folder pathes in the cloud storage
            </summary>
            <param name="path"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DeleteFileSystemEntry(System.String)">
            <summary>
            This function allows to delete a specific file or directory
            </summary>
            <param name="filePath">File or directory path which has to be deleted</param>
            <returns></returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.MoveFileSystemEntry(System.String,System.String)">
            <summary>
            This method moves a file or a directory from its current
            location to a new onw
            </summary>
            <param name="filePath">Filesystem object which has to be moved</param>
            /// <param name="newParentPath">The new location of the targeted filesystem object</param>
            <returns></returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.RenameFileSystemEntry(System.String,System.String)">
            <summary>
            This mehtod allows to perform a server side renam operation which is basicly the same
            then a move operation in the same directory
            </summary>
            <param name="filePath">File or directory which has to be renamed</param>
            <param name="newName">The new name of the targeted filesystem object</param>
            <returns></returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.CreateFile(System.String)">
            <summary>
            This method creates a new file object in the cloud storage. Use the GetContentStream method to 
            get a .net stream which usable in the same way then local stream are usable
            </summary>
            <param name="filePath">The name of the targeted file</param>
            <returns></returns>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SerializeSecurityTokenToStream(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,System.IO.Stream)">
            <summary>
            This method serializes a token into an opened stream object
            </summary>
            <param name="token"></param>
            <param name="targetStream"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetCloudConfigurationEasy(AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations,System.Object[])">
            <summary>
            This method maps a given type of supporte cloud storage provider into a working standard configuration. The parameters
            field has to be filled out as follows:
            DropBox - nothing
            BoxNet - nothing
            StoreGate - Use ICredentials for authentication (service will be calculated from this)
            SmartDriv - nothing
            WebDav - The URL of the webdav service
            </summary>
            <param name="configtype"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetCloudConfiguration(AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations,System.Object[])">
            <summary>
            This method maps a given type of supporte cloud storage provider into a working standard configuration. The parameters
            field has to be filled out as follows:
            DropBox - nothing
            BoxNet - nothing
            StoreGate - Use ICredentials for authentication (service will be calculated from this)
            SmartDriv - nothing
            WebDav - The URL of the webdav service
            </summary>
            <param name="configtype"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.FileStreamCopyCallback(System.Object,AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperProgressEvent,System.Object[])">
            <summary>
            Just a helper for the stream copy process
            </summary>
            <param name="sender"></param>
            <param name="pe"></param>        
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SynchronizeFolder(System.IO.DirectoryInfo,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags)">
            <summary>
            This function allows to synchronize a local folder with an folder exists in the cloud storage 
            and vice versa. The local folder and the target folder has to be created before.       
            </summary>
            <param name="srcFolder"></param>
            <param name="tgtFolder"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SynchronizeFolder(System.String,System.String,AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags)">
            <summary>
            This function allows to synchronize a local folder with an folder exists in the cloud storage 
            and vice versa. The local folder and the target folder has to be created before.       
            </summary>
            <param name="srcFolder"></param>
            <param name="tgtFolder"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFullCloudPath(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            Returns a path to the file object
            </summary>
            <param name="fsentry"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFullCloudPath(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.Char)">
            <summary>
            Returns a path to the file object
            </summary>
            <param name="fsentry">start entry</param>
            <param name="cDelimiter">delimiter</param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFullCloudPath(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.Char)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="fsentry"></param>
            <param name="cDelimiter"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.OpenRequestCallback(System.Object)">
            <summary>
            This method implements a asyncallback for the open
            request, which is describe in BeginOpenRequest
            </summary>
            <param name="state">A reference to the start object</param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.BeginOpenRequest(System.AsyncCallback,AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration,AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            Starts the async open request
            </summary>
            <param name="callback"></param>
            <param name="configuration"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.EndOpenRequest(System.IAsyncResult)">
            <summary>
            Finishs the async open request
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetChildsRequestCallback(System.Object)">
            <summary>
            This method implements a asyncallback for the get childs
            request, which is describe in BeginGetChildsRequest
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.BeginGetChildsRequest(System.AsyncCallback,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            Starts the asyn get childs call
            </summary>
            <param name="callback"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.EndGetChildsRequest(System.IAsyncResult)">
            <summary>
            Finishes the async get childs call
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetRootRequestCallback(System.Object)">
            <summary>
            This method implements a asyncallback for the getroot
            request, which is describe in BeginGetRootRequest
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.BeginGetRootRequest(System.AsyncCallback)">
            <summary>
            Starts the asyn getRoot call
            </summary>
            <param name="callback"></param>        
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.EndGetRootRequest(System.IAsyncResult)">
            <summary>
            Finishes the async getRoot call
            </summary>
            <param name="asyncResult"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.#ctor">
            <summary>
            The default constructure for a cloudstorage 
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.#ctor(AppLimit.CloudComputing.SharpBox.CloudStorage)">
            <summary>
            copy ctor
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.#ctor(AppLimit.CloudComputing.SharpBox.CloudStorage,System.Boolean)">
            <summary>
            copy ctor 
            </summary>
            <param name="src"></param>
            <param name="OpenIfSourceWasOpen"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.RegisterStorageProvider(System.Type,System.Type)">
            <summary>
            This method allows to register a storage provider for a specific configuration
            type
            </summary>
            <param name="configurationType">
            A <see cref="T:System.Type"/>
            </param>
            <param name="storageProviderType">
            A <see cref="T:System.Type"/>
            </param>
            <returns>
            A <see cref="T:System.Boolean"/>
            </returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.ValidateAllServerCertificates(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Ignores all invalid ssl certs
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="sslPolicyErrors"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.Open(AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration,AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            Calling this method with vendor specific configuration settings and token based credentials
            to get access to the cloud storage. The following exceptions are possible:
            
            - System.UnauthorizedAccessException when the user provides wrong credentials
            - AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxException when something 
              happens during cloud communication
            
            </summary>
            <param name="configuration">Vendor specific configuration of the cloud storage</param>
            <param name="token">Vendor specific authorization token</param>        
            <returns>A valid access token or null</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.Close">
            <summary>
            This method will close the connection to the cloud storage system
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetRoot">
            <summary>
            This method returns access to the root folder of the storage system
            </summary>
            <returns>Reference to the root folder of the storage system</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFileSystemObject(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method returns access ro a specific subfolder or file addressed via 
            unix like file system path, e.g. /Public/SubFolder/SubSub
            
            Valid Exceptions are:
             SharpBoxException(nSharpBoxErrorCodes.ErrorInvalidFileOrDirectoryName);
             SharpBoxException(nSharpBoxErrorCodes.ErrorFileNotFound);
            </summary>
            <param name="name">The path to the target subfolder</param>
            <param name="parent">The startfolder for the searchpath</param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.CreateFolder(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method creates a child folder in the give folder
            of the cloud storage
            </summary>
            <param name="name">Name of the new folder</param>
            <param name="parent">Parent folder</param>
            <returns>Reference to the created folder</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DeleteFileSystemEntry(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method removes a file or a directory from 
            the cloud storage
            </summary>
            <param name="fsentry">Reference to the filesystem object which has to be removed</param>
            <returns>Returns true or false</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.MoveFileSystemEntry(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method moves a file or a directory from its current
            location to a new onw
            </summary>
            <param name="fsentry">Filesystem object which has to be moved</param>
            <param name="newParent">The new location of the targeted filesystem object</param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.RenameFileSystemEntry(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            This mehtod allows to perform a server side renam operation which is basicly the same
            then a move operation in the same directory
            </summary>
            <param name="fsentry"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.CreateFile(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.String)">
            <summary> 
            This method creates a new file object in the cloud storage. Use the GetContentStream method to 
            get a .net stream which usable in the same way then local stream are usable.
            </summary>
            <param name="parent">Link to the parent container, null means the root directory</param>
            <param name="Name">The name of the targeted file</param>        
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFileSystemObjectUrl(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method returns the direct URL to a specific file system object,
            e.g. a file or folder
            </summary>
            <param name="path">A relative path to the file</param>
            <param name="parent">A reference to the parent of the path</param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.GetFileSystemObjectPath(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            Returns the path of the targeted object
            </summary>
            <param name="fsObject"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SerializeSecurityToken(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            This method allows to store a security token into a serialization stream
            </summary>        
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SerializeSecurityToken(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method allows to store a security token into a serialization stream and 
            makes it possible to store a couple of meta data as well
            </summary>
            <param name="token"></param>
            <param name="additionalMetaData"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SerializeSecurityTokenEx(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,System.Type,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method can be used for serialize a token without have the connection opened :-)
            </summary>
            <param name="token"></param>
            <param name="configurationType"></param>
            <param name="additionalMetaData"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SerializeSecurityTokenEx(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,System.Type,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            This method stores a token into a file
            </summary>
            <param name="token"></param>
            <param name="configurationType"></param>
            <param name="additionalMetaData"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.SerializeSecurityTokenToBase64Ex(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,System.Type,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method allows to serialize a security token into a base64 string 
            </summary>
            <param name="token"></param>
            <param name="configurationType"></param>
            <param name="additionalMetaData"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DeserializeSecurityToken(System.IO.Stream)">
            <summary>
            This method allows to load a token from a previously generated stream
            </summary>
            <param name="tokenStream"></param>        
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DeserializeSecurityTokenEx(System.String)">
            <summary>
            This method restores a tokene from file 
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DeserializeSecurityToken(System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            This method allows to load a token from a previously generated stream 
            and the attached metadata
            </summary>
            <param name="tokenStream"></param>
            <param name="additionalMetaData"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DeserializeSecurityTokenFromBase64(System.String)">
            <summary>
             This methd allows to deserialize a base64 tokenstring
            </summary>
            <param name="tokenString"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.DeserializeSecurityTokenFromBase64(System.String,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>        
             This methd allows to deserialize a base64 tokenstring
            </summary>
            <param name="tokenString"></param>
            <param name="additionalMetaData"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.StoreToken(System.Collections.Generic.Dictionary{System.String,System.String},AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,System.Type)">
            <summary>
            This method stores the content of an access token in to 
            a list of string. This list can be serialized.
            </summary>
            <param name="tokendata">Target list</param>
            <param name="token">the token</param>
            <param name="configurationType">type of configguration which is responsable for the token</param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorage.LoadToken(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method generated a access token from the given data 
            string list
            </summary>
            <param name="tokendata">the string list</param>
            <returns>The unserialized token</returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.CloudStorage.CurrentAccessToken">
            <summary>
            returns the currently setted access token 
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.CloudStorage.CurrentConfiguration">
            <summary>
            Allows access to the current configuration which was used in the open call
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.CloudStorage.IsOpened">
            <summary>
            True when a the connection to the Cloudstorage will be established
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags">
            <summary>
            This flags are used to control the folder
            synchronization.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags.Empty">
            <summary>
            Place holder for empty
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags.UploadItems">
            <summary>
            Just upload file from local to remote
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags.DownloadItems">
            <summary>
            Just download files from remote to local
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags.RemoveMissingFiles">
            <summary>
            Remove files which are not available in remote
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags.Recursive">
            <summary>
            Performe the action recursively
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.CloudStorage.SyncFolderFlags.Synchronize">
            <summary>
            Synchronize all, which combines the right flags
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.AsyncObjectRequest">
            <summary>
            This class implements an object request for all 
            async operations in SharpBox
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.AsyncObjectRequest.callback">
            <summary>
            Reference to the callback which will be called
            at the end of an async operation
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.AsyncObjectRequest.result">
            <summary>
            The generated asyncresult
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.AsyncObjectRequest.errorReason">
            <summary>
            In case of error the cached execption which can 
            be handled in the EndRequest method
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.UI.Sandbox">
            <summary>
            Control that provide management of cloud folders
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.Sandbox.#ctor">
            <summary>
            Constructor of Sandbox control
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.Sandbox.SetCloudStorage(AppLimit.CloudComputing.SharpBox.CloudStorage)">
            <summary>
            Assign cloud storage
            </summary>
            <param name="storage">Cloud storage object</param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.Sandbox.LoadSandBox">
            <summary>
            Method to load cloud folders
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.UI.Sandbox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.Sandbox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.Sandbox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:AppLimit.CloudComputing.SharpBox.UI.Sandbox.SandboxLoadCompleted">
            <summary>
            Event indicate that cloud folders have been loaded
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes">
            <summary>
            This enum contains all existing error codes
            which can be used in a SharpBoxException
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorCouldNotContactStorageService">
            <summary>
            This error occurs when the cloud storage 
            service will be not available via network
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorInvalidFileOrDirectoryName">
            <summary>
            This error occurs when a given path is not
            in the correct format, e.g. a directory is 
            needed but the path targets a files
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorFileNotFound">
            <summary>
            This error occurs when a file or path was 
            not found behind the given location
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorNoValidProviderFound">
            <summary>
            This error occurs when a cloud storage service
            provider was not registered for a specific
            configuration
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorCreateProviderInstanceFailed">
            <summary>
            This error occurs when the creation of a 
            cloud storage service provider was not 
            possible. This can happens when the author of
            a provider is doing complex things in the
            constructor of the class
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorInvalidCredentialsOrConfiguration">
            <summary>
            This error occurs when the give credentials, e.g.
            Password, UserName, ApplicationKey are wrong
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorInvalidParameters">
            <summary>
            This error occures when one or more parameters 
            of the called function was wrong
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorCouldNotRetrieveDirectoryList">
            <summary>
            This error occurs when the client can't request 
            the directory childs from the server
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorCreateOperationFailed">
            <summary>
            This error occurs when a create operation 
            failed
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorLimitExceeded">
            <summary>
            This error occurs when a configured limit 
            exceeds
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorInsufficientDiskSpace">
            <summary>
            This error occures when the storage limit of
            the cloud storage is exceeded
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorTransferAbortedManually">
            <summary>
            The datatransfer was interrupted from the
            application during a callback
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorOpenedConnectionNeeded">
            <summary>
            The operation needs an opened connection
            to the cloud storage, please call the 
            open method before!
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes.ErrorInvalidConsumerKeySecret">
            <summary>
            This error occurs when consumer
            Key/Secret pair are not valid
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorCouldNotContactStorageService">
            <summary>
              Looks up a localized string similar to Couldn&apos;t contact storage service.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorCouldNotRetrieveDirectoryList">
            <summary>
              Looks up a localized string similar to Couldn&apos;t retrieve child elements from the server.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorCreateProviderInstanceFailed">
            <summary>
              Looks up a localized string similar to Instancing the cloud storage provider failed, verify the inner exception.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorFileNotFound">
            <summary>
              Looks up a localized string similar to File not found.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorInsufficientDiskSpace">
            <summary>
              Looks up a localized string similar to No more space in cloud storage available.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorInvalidConsumerKeySecret">
            <summary>
              Looks up a localized string similar to The gived consumer Key/Secret are invalid.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorInvalidCredentialsOrConfiguration">
            <summary>
              Looks up a localized string similar to The gived credentials or configuration format does not fits to the storage provider.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorInvalidFileOrDirectoryName">
            <summary>
              Looks up a localized string similar to Invalid file or directory name.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorInvalidParameters">
            <summary>
              Looks up a localized string similar to One or more parameters are invalid.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorLimitExceeded">
            <summary>
              Looks up a localized string similar to Configured file size limit for transfer exceeded.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorNoValidProviderFound">
            <summary>
              Looks up a localized string similar to No valid storage provider was found for the given configuration type.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorOpenedConnectionNeeded">
            <summary>
              Looks up a localized string similar to The operation needs an opened connection to the cloud storage, please call the open method before!.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.ErrorMessages.ErrorTransferAbortedManually">
            <summary>
              Looks up a localized string similar to The datatransfer was interrupted from the application during a callback.
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider">
            <summary>
            The generic storage provider class implements platform independent logic as 
            base for all managed storage provider. All platform specific logic has to be implemented 
            in the storage provider service interface
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider._Service">
            <summary>
            A specific implementation of a storage service interface which contains
            all provider specific logic
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider._Session">
            <summary>
            A provider specific implementation of a session
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.#ctor(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderService)">
            <summary>
            The constructure need a specific service implementation
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.Open(AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration,AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            This method opens a session for the implemented storage provider based on an existing
            security token.
            </summary>
            <param name="configuration"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.Close">
            <summary>
            This method closes the established session to a service provider
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.GetRoot">
            <summary>
            This methid returns the root node of the virtual filesystem which 
            is abstracted by SharpBox
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.GetFileSystemObject(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method returns a filesystem object, this can be files or folders
            </summary>
            <param name="path"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.CreateFolder(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method creates a folder in a given parent folder 
            </summary>
            <param name="name"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.DeleteFileSystemEntry(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method removes a given filesystem object from the cloud storage
            </summary>
            <param name="fsentry"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.MoveFileSystemEntry(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method moves a specifc filesystem object from his current location
            into a new folder
            </summary>
            <param name="fsentry"></param>
            <param name="newParent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.RenameFileSystemEntry(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            This method renames a given filesystem object (file or folder)
            </summary>
            <param name="fsentry"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.CreateFile(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry,System.String)">
            <summary>
            This method creates a file in the cloud storage
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.GetFileSystemObjectUrl(System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method returns the absolut URL (with all authentication decorators) for a specific file
            system object
            </summary>
            <param name="path"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.GetFileSystemObjectPath(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method returns the filesystem path (UNIX style) of a specific object
            </summary>
            <param name="fsObject"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.StoreToken(System.Collections.Generic.Dictionary{System.String,System.String},AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            This method stores the given security token into a tokendictionary
            </summary>
            <param name="tokendata"></param>
            <param name="token"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.LoadToken(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method loads the given token from the token dictionary
            </summary>
            <param name="tokendata"></param>
            <returns></returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericStorageProvider.CurrentAccessToken">
            <summary>
            This property returns the current accesstoken
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.FTP.FtpConfiguration">
            <summary>
            This class implements all FTP specific configurations
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.FTP.FtpConfiguration.#ctor(System.Uri)">
            <summary>
            ctor of the FTP configuration
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.FTP.FtpConfiguration.TrustUnsecureSSLConnections">
            <summary>
            Specifies if we allow not secure ssl connections
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.FTP.FtpConfiguration.Limits">
            <summary>
            Sets or gets the limits of a webdav configuration
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.FTP.FtpConfiguration.ServiceLocator">
            <summary>
            Gets the FTP service url
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer">
            <summary>
            This interface implements a specifc transfer logic which can be used
            to transport data from a local data stream to a remote filesystem entry 
            and back
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer.Transfer(System.IO.Stream,AppLimit.CloudComputing.SharpBox.nTransferDirection)">
            <summary>
            This method transfers data between a local data stream and the remote filesystem entry on
            byte level
            </summary>
            <param name="targetDataStream"></param>
            <param name="direction"></param>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer.Transfer(System.IO.Stream,AppLimit.CloudComputing.SharpBox.nTransferDirection,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged,System.Object)">
            <summary>
            This method transfers data between a local data stream and the remote filesystem entry on
            byte level
            </summary>
            <param name="targetDataStream"></param>
            <param name="direction"></param>
            <param name="progressCallback"></param>
            <param name="progressContext"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer.TransferAsyncProgress(System.IO.Stream,AppLimit.CloudComputing.SharpBox.nTransferDirection,AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged,System.Object)">
            <summary>
            This method transfers data between a local data stream and the remote filesystem entry on
            byte level. This API triggers the callback in an async manner this means the transfer process
            is not blocked during the consumer is in the handler
            </summary>
            <param name="targetDataStream"></param>
            <param name="direction"></param>
            <param name="progressCallback"></param>
            <param name="progressContext"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer.GetDownloadStream">
            <summary>
            Allows native access to the download stream of the associated file. 
            Ensure that this stream will be disposed clearly!
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer.GetUploadStream(System.Int64)">
            <summary>
            Allows native access to the upload stream of the associated file
            Ensure that this stream will be disposed clearly!
            </summary>
            <param name="uploadSize"></param>        
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer.Serialize(System.Runtime.Serialization.IFormatter,System.Object)">
            <summary>
            This method supports the serialization of object graphs into the remote file container
            </summary>        
            <param name="dataFormatter"></param>
            <param name="objectGraph"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileDataTransfer.Deserialize(System.Runtime.Serialization.IFormatter)">
            <summary>
            This method allows to deserialize an object graph from the remote file container
            </summary>        
            <param name="dataFormatter"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry">
            <summary>
            Normally file based storage systems are supporting file system
            entries. This interface will be used to get access on the 
            file system entry in the cloud storage 
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry.GetDataTransferAccessor">
            <summary>
            This method return an implementation of an content data transfer interface
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry.GetPropertyValue(System.String)">
            <summary>
            This method gives raw access to the properties of the specific
            protocol provider
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry.Name">
            <summary>
            The name of the associated folder
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry.Length">
            <summary>
            This attribute contains the size of a file or the count of childs
            of the associated directory
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry.Modified">
            <summary>
            This attribute contains the modification date of the object
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry.Parent">
            <summary>
            The parent folder of the associated folder, can be null if it's 
            the root folder
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.nTransferDirection">
            <summary>
            This enum describes the data transfer direction
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nTransferDirection.nUpload">
            <summary>
            Defines that the target data stream should be uploaded into the cloud file container
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nTransferDirection.nDownload">
            <summary>
            Defines that the data from the cloud file container should be downloaded into the target data stream
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs">
            <summary>
            This class contains the arguments which can be used when a data transfer operation is running
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.Clone">
            <summary>
            This method implements to clone interface to support a deep copy 
            of everything what we use to report the progress of a operation
            </summary>
            <returns></returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.Cancel">
            <summary>
            Set this to true to abort the transfer
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.CurrentBytes">
            <summary>
            The amount of bytes currently transfered
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.TotalBytes">
            <summary>
            The amount of bytes which has to be transfered in total
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.PercentageProgress">
            <summary>
            Overall progress in %
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.TransferRateTotal">
            <summary>
            The calculated transfer rate for this operation overall(Kbits/s)
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.TransferRateCurrent">
            <summary>
            The current messured transfer rate (Kbits/s)
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.OpenTransferTime">
            <summary>
            The estimated finish time if this transfer
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.FileSystemEntry">
            <summary>
            A reference to the associated cloud file system entry
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.FileDataTransferEventArgs.CustomnContext">
            <summary>
            A use specific context
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.FileOperationProgressChanged">
            <summary>
            This delegate can be used as callback for upload or download operation in the 
            data streams.
            </summary>
            <param name="sender">sender object of the event</param>
            <param name="e">event args</param>    
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.HttpUtilityEx">
            <summary>
            This class exposes some extensions to the .NET HttpUtility class
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.HttpUtilityEx.UrlEncodeUTF8(System.String)">
            <summary>
            This method encodes an url
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.HttpUtilityEx.PathDecodeUTF8(System.String)">
            <summary>
            This methid decodes a UTF8 encoded path
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.HttpUtilityEx.IsSuccessCode(System.Net.HttpStatusCode)">
            <summary>
            This method returns true if the give http error code is a success 
            error code, this means in 2XX
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.HttpUtilityEx.IsSuccessCode(System.Int32)">
            <summary>
            This method returns true if the give http error code is a success 
            error code, this means in 2XX
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.HttpUtilityEx.GenerateEncodedUriString(System.Uri)">
            <summary>
            This method generates a well encoded uri string
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.HttpUtilityEx.GetPathAndQueryLessUri(System.Uri)">
            <summary>
            Reduces the url to the root service url
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxException">
            <summary>
            The SharpBoxException class implements the error code and error
            message of a specific sharp box error. Catch this kind of exceptions
            to get all sharpbox related error in the application
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxException.#ctor(AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes)">
            <summary>
            The constructure if the SharpBoxException class. The error code wil
            be resolved into an text message automatically
            </summary>
            <param name="errorCode"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxException.#ctor(AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxErrorCodes,System.Exception)">
            <summary>
            The constructure if the SharpBoxException class. The error code wil
            be resolved into an text message automatically
            </summary>
            <param name="errorCode"></param>
            <param name="innerException"></param>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxException.ErrorCode">
            <summary>
            This property contains the errorcode of the specific sharpbox error
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxException.PostedRequet">
            <summary>
            This property contains the used webrequest which throws the exception
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Exceptions.SharpBoxException.DisposedReceivedResponse">
            <summary>
            This property contains a disposed webresponse which received during 
            network operation which throws this exception
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecuted">
            <summary>
            This delegate can be used to defines callbacks which will be called after
            a webrequest is processed
            </summary>
            <param name="sender">the caller of the webrequest</param>
            <param name="e">The executed evemt args</param>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecuting">
            <summary>
            This delegate can be used to defines callbacks which will be called before
            a webrequest is processed
            </summary>
            <param name="sender">the caller of the webrequest</param>
            <param name="e">the executed event args</param>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestManager">
            <summary>
            This class allows to be informed about all oAuth requests in the 
            library. Do not add event receiver during runtime, only during start
            up of your application
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestManager.SetProxySettings(System.String,System.Int32,System.Net.ICredentials)">
            <summary>
            This method allows to set an alternative proxy host. The system wide 
            settings wil be overwritten
            </summary>
            <param name="proxyHost"></param>
            <param name="proxyPort"></param>
            <param name="credentials"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestManager.SetEmptyProxySettings">
            <summary>
            This method remove the proxy settings and ensures that no proxy will be used
            at all
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestManager.Instance">
            <summary>
            This is the instance accessor of the oAuthServiceManager
            </summary>
        </member>
        <member name="E:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestManager.RequestPreparedEvent">
            <summary>
            This event will be raised when the webrequest is prepared
            </summary>
        </member>
        <member name="E:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestManager.RequestExecutingEvent">
            <summary>
            This event will beraised before a webrequest will be executed
            </summary>
        </member>
        <member name="E:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestManager.RequestExecutedEvent">
            <summary>
            This event will be raised after a webrequest was executed
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.Ftp.FtpService.FtpCreateDirectory(System.String,System.Net.ICredentials)">
            <summary>
            This method creates a directory in the ftp server
            </summary>
            <param name="uri"></param>
            <param name="credentials"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.Ftp.FtpService.FtpDeleteEmptyDirectory(System.String,System.Net.ICredentials)">
            <summary>
            This method removes a directory
            </summary>
            <param name="uri"></param>
            <param name="credentials"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.Ftp.FtpService.FtpDeleteFile(System.String,System.Net.ICredentials)">
            <summary>
            This method removes an file
            </summary>
            <param name="uri"></param>
            <param name="credentials"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.Ftp.FtpService.GetStringResponse(System.Net.WebRequest)">
            <summary>
            Obtains a response stream as a string
            </summary>
            <param name="ftp">current FTP request</param>
            <returns>String containing response</returns>
            <remarks>FTP servers typically return strings with CR and
            not CRLF. Use respons.Replace(vbCR, vbCRLF) to convert
            to an MSDOS string</remarks>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.Json.JsonDateTimeConverter">
            <summary>
            This class implements a json helper to convert a date time string 
            into the DateTime-Class of .NET
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Json.JsonDateTimeConverter.GetDateTimeProperty(System.String)">
            <summary>
            This method converts and returns a json date time string into a .NET date time
            string
            </summary>
            <param name="dateTime">The JSON datetime string</param>
            <returns>The .NET dateTime string</returns>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMethodsEx.WebDAV.Move">
            <summary>
            MOVE Method.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMethodsEx.WebDAV.PropFind">
            <summary>
            PROPFIND Method.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMethodsEx.WebDAV.Delete">
            <summary>
            DELETE Method.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMethodsEx.WebDAV.Copy">
            <summary>
            COPY Method.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMethodsEx.WebDAV.Options">
            <summary>
            OPTIONS Method.
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat">
            <summary>
            Class to generate file size formatted strings
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.Format(System.Decimal)">
            <summary>
            Automatically format a size
            </summary>
            <param name="size">The size</param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FormatToUnit(System.Decimal,AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit)">
            <summary>
            Format a size to a specific unit
            </summary>
            <param name="size">The size</param>
            <param name="unit">The unit</param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.ConvertToUnit(System.Decimal,AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit)">
            <summary>
            Convert bytes to unit (KB or MB...)
            </summary>
            <param name="size">The size</param>
            <param name="unit">The unit</param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit">
            <summary>
            Size unit
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit.B">
            <summary>
            Byte unit
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit.KB">
            <summary>
            Kilo bytes unit
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit.MB">
            <summary>
            Mega bytes unit
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit.GB">
            <summary>
            giga bytes unit
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.UI.FileSizeFormat.FileSizeUnit.TB">
            <summary>
            Tera byes unit
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericNetworkCredentials">
            <summary>
            This class contains the needed access credentials for a specific webdav 
            user
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericCurrentCredentials">
            <summary>
            This class contains the needed access credentials for a specific webdav 
            user
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken">
            <summary>
            Many cloud storages allow a token based authentication. This interface is used to implement 
            an access token structure
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericCurrentCredentials.GetCredential(System.Uri,System.String)">
            <summary>
            Returns the network credentials which can be used in webrequest. This method
            uses the standard credentials of the logged on user
            </summary>
            <param name="uri"></param>
            <param name="authType"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericNetworkCredentials.GetCredential(System.Uri,System.String)">
            <summary>
            returns network credentials which are usable in a webrequest
            </summary>
            <param name="uri"></param>
            <param name="authType"></param>
            <returns></returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericNetworkCredentials.UserName">
            <summary>
            Useraccount of the end user with access to the WebDav share
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.GenericNetworkCredentials.Password">
            <summary>
            Password of the end user with access to the WebDav share
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory">
            <summary>
            This class allows to create the needed object which are internally used to create
            extern storage providers
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.CreateFileSystemEntry(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method builds an object 
            </summary>        
            <param name="session"></param>
            <param name="Name"></param>
            <param name="parent"></param>        
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.CreateFileSystemEntry(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,System.DateTime,System.Int64,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method creates a filesystem entry 
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="modified"></param>
            <param name="fileSize"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.ClearAllChilds(AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method clears all childs of a directory entry
            </summary>
            <param name="dir"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.CreateDirectoryEntry(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.CreateDirectoryEntry(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,System.DateTime,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="modifiedDate"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.DeleteFileSystemEntry(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="objectToRemove"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.MoveFileSystemEntry(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="objectToMove"></param>
            <param name="newParent"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.RenameFileSystemEntry(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="objectToRename"></param>
            <param name="newName"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.API.GenericStorageProviderFactory.ModifyFileSystemEntryLength(AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.Int64)">
            <summary>
            
            </summary>
            <param name="fsentry"></param>
            <param name="newLength"></param>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper">
            <summary>
            A class with reimplements some aspects if the Path clas
            to make the handling of path names easier
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper.Delimiter">
            <summary>
            The used path delimiter
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper.#ctor(System.String)">
            <summary>
            ctor with access path
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper.IsPathRooted">
            <summary>
            Checks if the given path is rooted
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper.GetPathElements">
            <summary>
            Returns all path elements in a path
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper.GetDirectoryName">
            <summary>
            Returns the directory name
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper.GetFileName">
            <summary>
            Returns the filename
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.IO.PathHelper.Combine(System.String,System.String)">
            <summary>
            Combines several path elements
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.AsyncResultEx">
            <summary>
            This class implements the used async result class 
            which will be generated in all async operations
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.AsyncResultEx.#ctor(System.Object)">
            <summary>
            ctor of AsyncResultEx which handles
            the used state object
            </summary>
            <param name="AsyncState"></param>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.AsyncResultEx.AsyncState">
            <summary>
            This properties allows read access to the state object
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.AsyncResultEx.AsyncWaitHandle">
            <summary>
            The wait handle, which is not needed in SharpBox
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.AsyncResultEx.CompletedSynchronously">
            <summary>
            The sync boolean, which is not needed in SharpBox
            </summary>        
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.AsyncResultEx.IsCompleted">
            <summary>
            IsCompleted, which is not needed in SharpBox
            </summary>                
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.SyncFramework.DirectoryDiff">
            <summary>
            This class generates the differences between two folders, one on the local
            filesystem and one in the cloud
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.SyncFramework.DirectoryDiff.#ctor(System.IO.DirectoryInfo,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            ctor for DirectoryDiff
            </summary>
            <param name="localPath">path of the local directory</param>
            <param name="remotePath">path of the remote directory</param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.SyncFramework.DirectoryDiff.Compare(System.Boolean)">
            <summary>
            compares a local and a remote directory. The result will be a list of differences!
            </summary>
            <param name="bRecursive">check also sub directories</param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration">
            <summary>
            This class implements all BoxNet specific configurations
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.#ctor(System.Uri)">
            <summary>
            ctor of the Box.Net configuration
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.Get1and1Configuration">
            <summary>
            This method returns a standard configuration for 1and1 
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.GetStoreGateConfiguration(System.Net.NetworkCredential)">
            <summary>
            This method returns a standard cofiguration for StoreGate
            </summary>
            <param name="credentials"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.GetCloudMeConfiguration(System.Net.NetworkCredential)">
            <summary>
            This method returns a standard cofiguration for CloudMe
            </summary>
            <param name="credentials"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.GetHiDriveConfiguration">
            <summary>
            This method returns a standard configuration for Strato HiDrive 
            </summary>
            <returns></returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.webServer">
            <summary>
            The url of webserver which has to be used for access to a specific 
            webdav share.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.TrustUnsecureSSLConnections">
            <summary>
            Specifies if we allow not secure ssl connections
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.UploadDataStreambuffered">
            <summary>
            Specifies if the webdavclient should upload the data
            stream buffered. Detailed is fales to reduce the 
            memory foodprint!
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.Limits">
            <summary>
            Sets or gets the limits of a webdav configuration
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.WebDavConfiguration.ServiceLocator">
            <summary>
            Gets the webdav service url
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.BoxNet.BoxNetConfiguration">
            <summary>
            The specific configuration for box.net
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.BoxNet.BoxNetConfiguration.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.BoxNet.BoxNetConfiguration.GetBoxNetConfiguration">
            <summary>
            This method returns a standard configuration for 1and1 
            </summary>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations">
            <summary>
            This enum describes all support cloud storage provider
            configuration in sharpbox. This enum will also be used
            to implement a service chooser in the future
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations.DropBox">
            <summary>
            DropBox 
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations.StoreGate">
            <summary>
            StoreGate
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations.BoxNet">
            <summary>
            BoxNet
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations.SmartDrive">
            <summary>
            SmartDrive
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations.WebDav">
            <summary>
            WebDav
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations.CloudMe">
            <summary>
            CloudMe
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nSupportedCloudConfigurations.HiDrive">
            <summary>
            Strato HiDrive
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.UI.LoginControl">
            <summary>
            Generic Login control
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.LoginControl.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.LoginControl.OnLoginCompleted(System.Object,System.EventArgs)">
            <summary>
            Login completed event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.UI.LoginControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.LoginControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.LoginControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.UI.LoginControl.User">
            <summary>
            Username typed
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.UI.LoginControl.Password">
            <summary>
            Password typed
            </summary>
        </member>
        <member name="E:AppLimit.CloudComputing.SharpBox.UI.LoginControl.LoginCompleted">
            <summary>
            End of login event
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxStorageProviderTools">
            <summary>
            This class contains a couple a tools which will be helpful
            when working with dropbox only
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxStorageProviderTools.GetDropBoxRequestToken(AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration,System.String,System.String)">
            <summary>
            This method retrieves a new request token from the dropbox server
            </summary>
            <param name="configuration"></param>
            <param name="ConsumerKey"></param>
            <param name="ConsumerSecret"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxStorageProviderTools.GetDropBoxAuthorizationUrl(AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration,AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxRequestToken)">
            <summary>
            This method builds derived from the request token a valid authorization url which can be used
            for web applications
            </summary>
            <param name="configuration"></param>
            <param name="DropBoxRequestToken"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxStorageProviderTools.ExchangeDropBoxRequestTokenIntoAccessToken(AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration,System.String,System.String,AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxRequestToken)">
            <summary>
            This method is able to exchange the request token into an access token which can be used in 
            sharpbox. It is necessary that the user validated the request via authorization url otherwise 
            this call wil results in an unauthorized exception!
            </summary>
            <param name="configuration"></param>
            <param name="ConsumerKey"></param>
            <param name="ConsumerSecret"></param>
            <param name="DropBoxRequestToken"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxStorageProviderTools.GetAccountInformation(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            This method returns the account information of a dropbox account
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxStorageProviderTools.GetPublicObjectUrl(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method returns the public URL of a DropBox file or folder
            </summary>
            <param name="token"></param>
            <param name="fsEntry"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxStorageProviderTools.LoginWithMobileAPI(System.String,System.String,System.String,System.String)">
            <summary>
            This method offers the mobile login api of dropbox for users who are migrating from version 0 of the 
            dropbox API because version 1 supports token based logins only
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="appkey"></param>
            <param name="appsecret"></param>
            <returns></returns>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.FTP.Logic.FtpStorageProviderService._ParseFormats">
            <summary>
            List of REGEX formats for different FTP server listing formats
            </summary>
            <remarks>
            The first three are various UNIX/LINUX formats, fourth is for MS FTP
            in detailed mode and the last for MS FTP in 'DOS' mode.
            I wish VB.NET had support for Const arrays like C# but there you go
            </remarks>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxRequestToken">
            <summary>
            This token will be issued during the web based token generation 
            process for dropbox
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry">
            <summary>
            Normally file based storage systems are supporting a hierarchical
            folder structure. This interface will be used to get access on the 
            folders in the cloud storage 
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry.GetChild(System.String)">
            <summary>
            This method allows to get a directory entry with a specific folder 
            name.
            </summary>
            <param name="name">The name of the targeted folder</param>
            <returns>Reference to the file or folder</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry.GetChild(System.String,System.Boolean)">
            <summary>
            This method allows to get a directory entry with a specific folder 
            name.
            </summary>
            <param name="name"></param>
            <param name="bThrowException"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry.GetChild(System.Int32)">
            <summary>
            This method allows to get a directory entry with a specific index
            number
            </summary>
            <param name="idx">The index of the targeted folder</param>
            <returns>Reference to the file or folder</returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry.Count">
            <summary>
            This property allows to access to the number of 
            child items
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry.HasChildrens">
            <summary>
            This property contains the information about the children state. Query this property
            will not perform any network operations
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperResultCodes">
            <summary>
            Defines the action which will done from the streamhelper after calling the callback
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperResultCodes.OK">
            <summary>
            go forward with stream transfer
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperResultCodes.Aborted">
            <summary>
            abort stream transfer
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperResultCodes.InvalidParameter">
            <summary>
            Parameters are invalid
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperProgressEvent.ReadBytesTotal">
            <summary>
            Amount of bytes transfered in during this process
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperProgressEvent.TotalLength">
            <summary>
            Amount of bytes which has to be transfered in this process
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperProgressEvent.ReadBytesCurrentOperation">
            <summary>
            Amount of bytes transfered between this and the last event
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperProgressEvent.TransferRateTotal">
            <summary>
            The transfer rate in KBits per Second related to bytes totally transfered (ReadBytesTotal)
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperProgressEvent.TransferRateCurrent">
            <summary>
            The transfer rate in KBits per Second related to the last 500ms 
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.IO.StreamHelperProgressEvent.PercentageProgress">
            <summary>
            Overall progress in percent
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.CloudStorageLimits">
            <summary>
            This class contains the limits of a given cloud storage
            configuration
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorageLimits.#ctor">
            <summary>
            Default ctor which sets the limits to an 
            unlimited value (no limits)
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.CloudStorageLimits.#ctor(System.Int32,System.Int32)">
            <summary>
            Special ctor which allows to initials the limits with
            special values in an external protocol provider
            </summary>
            <param name="MaxUploadFileSize"></param>
            <param name="MaxDownloadFileSite"></param>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.CloudStorageLimits.MaxUploadFileSize">
            <summary>
            defines the maximum file size in bytes during upload
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.CloudStorageLimits.MaxDownloadFileSize">
            <summary>
            defines the maximum file size in bytes during download
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.UI.ListViewColumnSorter">
            <summary>
            Class to sort a listview control by column
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.ListViewColumnSorter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.UI.ListViewColumnSorter.Compare(System.Object,System.Object)">
            <summary>
            Compare two objects
            </summary>
            <param name="x">Object 1</param>
            <param name="y">Object 2</param>
            <returns>
            0 if equals
            1 if object X is before object Y
            -1 if object X is after object Y
            </returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.UI.ListViewColumnSorter.SortColumn">
            <summary>
            Last sorted column
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.UI.ListViewColumnSorter.Order">
            <summary>
            Last sort order
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAccountInfo">
            <summary>
            This class contains information about the dropbox account
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAccountInfo.Country">
            <summary>
            The country where the user comes from
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAccountInfo.DisplayName">
            <summary>
            The displayname of the user 
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAccountInfo.UserId">
            <summary>
            The user Id
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAccountInfo.QuotaInfo">
            <summary>
            Quotainformation of dropbox
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavStorageProviderService.VerifyAccessTokenType(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken)">
            <summary>
            Verifies if the given credentials are valid webdav credentials
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavStorageProviderService.CreateSession(AppLimit.CloudComputing.SharpBox.ICloudStorageAccessToken,AppLimit.CloudComputing.SharpBox.ICloudStorageConfiguration)">
            <summary>
            This method generates a session to a webdav share via username and password
            </summary>
            <param name="token"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavStorageProviderService.RequestResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method request information about a resource
            </summary>
            <param name="session"></param>
            <param name="Name"></param>        
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavStorageProviderService.CreateResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,System.String,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="Name"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavStorageProviderService.DeleteResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry)">
            <summary>
            This method removes a specific resource from a webdav share
            </summary>
            <param name="session"></param>
            <param name="entry"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavStorageProviderService.MoveResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,AppLimit.CloudComputing.SharpBox.ICloudDirectoryEntry)">
            <summary>
            This method moves a resource from one webdav location to an other
            </summary>
            <param name="session"></param>
            <param name="fsentry"></param>
            <param name="newParent"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavStorageProviderService.RenameResource(AppLimit.CloudComputing.SharpBox.StorageProvider.API.IStorageProviderSession,AppLimit.CloudComputing.SharpBox.ICloudFileSystemEntry,System.String)">
            <summary>
            Renames a webdave file or folder
            </summary>
            <param name="session"></param>
            <param name="fsentry"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Token.OAuthToken">
            <summary>
            The OAuthToken will be generated during the login process in a oauth compliant 
            application and can be used to sign the url
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Token.OAuthToken.#ctor(System.String,System.String)">
            <summary>
            The token can only be generated from our API
            </summary>
            <param name="tokenKey"></param>
            <param name="tokenSecret"></param>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Token.OAuthToken.TokenKey">
            <summary>
            The key for uri signing
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Token.OAuthToken.TokenSecret">
            <summary>
            The secret for uri signing
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecutedEventArgs">
            <summary>
            This class contains the argument of the WebRequestExecuted event
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecutedEventArgs.response">
            <summary>
            The web reponse
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecutedEventArgs.timeNeeded">
            <summary>
            The timespan of the webrequest
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecutedEventArgs.resultStream">
            <summary>
            The result as data stream
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecutedEventArgs.exception">
            <summary>
            possibe web exception
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.WebDav.Logic.WebDavRequestParser.CheckIfNameSpaceDAVSpace(System.String,System.Xml.XmlTextReader)">
            <summary>
            This method checks if the attached 
            </summary>
            <param name="element"></param>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.SignatureTypes">
            <summary>
            Provides a predefined set of algorithms that are supported officially by the protocol
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.ComputeHash(System.Security.Cryptography.HashAlgorithm,System.String)">
            <summary>
            Helper function to compute a hash value
            </summary>
            <param name="hashAlgorithm">The hashing algoirhtm used. If that algorithm needs some initialization, like HMAC and its derivatives, they should be initialized prior to passing it to this function</param>
            <param name="data">The data to hash</param>
            <returns>a Base64 string of the hash value</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.GetQueryParameters(System.String)">
            <summary>
            Internal function to cut out all non oauth query string parameters (all parameters not begining with "oauth_")
            </summary>
            <param name="parameters">The query string part of the Url</param>
            <returns>A list of QueryParameter each containing the parameter name and value</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.UrlEncode(System.String)">
            <summary>
            This is a different Url Encode implementation since the default .NET one outputs the percent encoding in lower case.
            While this is not a problem with the percent encoding spec, it is used in upper case throughout OAuth
            </summary>
            <param name="value">The value to Url encode</param>
            <returns>Returns a Url encoded string</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.NormalizeRequestParameters(System.Collections.Generic.IList{AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.QueryParameter})">
            <summary>
            Normalizes the request parameters according to the spec
            </summary>
            <param name="parameters">The list of parameters already sorted</param>
            <returns>a string representing the normalized parameters</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.GenerateSignatureBase(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            Generate the signature base that is used to produce the signature
            </summary>
            <param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
            <param name="consumerKey">The consumer key</param>        
            <param name="token">The token, if available. If not available pass null or an empty string</param>
            <param name="tokenSecret">The token secret, if available. If not available pass null or an empty string</param>
            <param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
            <param name="timeStamp">The timestamp which is used in the signature baser</param>
            <param name="nonce">A unique value with identifies the request, this value can't be used more then one times</param>        
            <param name="signatureType">The signature type. To use the default values use OAuthBase.SignatureTypes.</param>
            <param name="normalizedUrl">The URL without parameters</param>
            <param name="normalizedRequestParameters">The request parameters</param>
            <returns>The signature base</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.GenerateSignatureUsingHash(System.String,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            Generate the signature value based on the given signature base and hash algorithm
            </summary>
            <param name="signatureBase">The signature based as produced by the GenerateSignatureBase method or by any other means</param>
            <param name="hash">The hash algorithm used to perform the hashing. If the hashing algorithm requires initialization or a key it should be set prior to calling this method</param>
            <returns>A base64 string of the hash value</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.GenerateSignature(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            Generates a signature using the HMAC-SHA1 algorithm
            </summary>		
            <param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
            <param name="consumerKey">The consumer key</param>
            <param name="consumerSecret">The consumer seceret</param>
            <param name="token">The token, if available. If not available pass null or an empty string</param>
            <param name="tokenSecret">The token secret, if available. If not available pass null or an empty string</param>
            <param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
            <param name="timeStamp">The timestamp which is used in the signature baser</param>
            <param name="nonce">A unique value with identifies the request, this value can't be used more then one times</param>        
            <param name="normalizedUrl">The URL without parameters</param>
            <param name="normalizedRequestParameters">The request parameters</param>
            <returns>A base64 string of the hash value</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.GenerateSignature(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.SignatureTypes,System.String@,System.String@)">
            <summary>
            Generates a signature using the specified signatureType 
            </summary>		
            <param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
            <param name="consumerKey">The consumer key</param>
            <param name="consumerSecret">The consumer seceret</param>
            <param name="token">The token, if available. If not available pass null or an empty string</param>
            <param name="tokenSecret">The token secret, if available. If not available pass null or an empty string</param>
            <param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
            <param name="timeStamp">The timestamp which is used in the signature baser</param>
            <param name="nonce">A unique value with identifies the request, this value can't be used more then one times</param>        
            <param name="signatureType">The signature type. To use the default values use <see cref="T:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.SignatureTypes">OAuthBase.SignatureTypes</see>.</param>
            <param name="normalizedUrl">The URL without parameters</param>
            <param name="normalizedRequestParameters">The request parameters</param>
            <returns>A base64 string of the hash value</returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.GenerateTimeStamp">
            <summary>
            Generate the timestamp for the signature        
            </summary>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.GenerateNonce">
            <summary>
            Generate a nonce
            </summary>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.QueryParameter">
            <summary>
            Provides an internal structure to sort the query parameter
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.oAuth.Impl.OAuthBase.QueryParameterComparer">
            <summary>
            Comparer class used to perform the sorting of the query parameters
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxQuotaInfo">
            <summary>
            This class contains information about the dropbox quota
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxQuotaInfo.SharedBytes">
            <summary>
            How many bytes are shared with other users
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxQuotaInfo.QuotaBytes">
            <summary>
            What is the size limit of the dropbox
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxQuotaInfo.NormalBytes">
            <summary>
            How many not shared bytes are used
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAPIVersion">
            <summary>
            This enum defines possible API versions DropBox offers to 
            their customers
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAPIVersion.V0">
            <summary>
            Version 0 of the DropBox API
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAPIVersion.V1">
            <summary>
            Version 1 of the DropBox API
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxAPIVersion.Stable">
            <summary>
            The current stable version which will be used by SharpBox by default
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration">
            <summary>
            DropBoxConfiguration conains the default access information for the DropBox
            storage and synchronization services. This class implements from the 
            ICloudStorageConfiguration interface and can be used with an instance of CloudStorage    
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.AuthorizationCallBack">
            <summary>
            This field contains the callback URL which will be used in the oAuth 
            request. Default will be sharpbox.codeplex.com 
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.#ctor">
            <summary>
            Constructor of a dropbox configuration
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.#ctor(System.Uri)">
            <summary>
            Allows to create the dopbox configuration with a special 
            service provider location
            </summary>
            <param name="ServiceLocator"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.GetStandardConfiguration">
            <summary>
            This method generates an instance of the default dropbox configuration
            </summary>
            <returns>Instance of the DropBoxConfiguration-Class with default settings</returns>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.RequestTokenUrl">
            <summary>
            This method creates and returns the url which has to be used to get a access token 
            during the OAuth based authorization process
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.AccessTokenUrl">
            <summary>
            This method creates and returns the url which has to be used to get a access token 
            during the OAuth based authorization process
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.AuthorizationTokenUrl">
            <summary>
            This method creates and returns the url which can be used in the browser
            to authorize the end user
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.APIVersion">
            <summary>
            The APIVersion which will be used for communication with dropbox. As default 
            the stable version is set!
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.TrustUnsecureSSLConnections">
            <summary>
            If true this value indicates the all ssl connection are valid. This means also ssl connection
            with an invalid certificate will be accepted.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.Limits">
            <summary>
            The limits of dropbox
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxConfiguration.ServiceLocator">
            <summary>
            Gets the currently used dropbox url
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxBaseTokenInformation">
            <summary>
            The base class of all credentials
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxBaseTokenInformation.ConsumerKey">
            <summary>
            ConsumerKey of the DropBox application, provided by the 
            DropBox-Developer-Portal
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.DropBox.DropBoxBaseTokenInformation.ConsumerSecret">
            <summary>
            ConsumerSecret of the DropBox application, provided by the 
            DropBox-Developer-Portal
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.SyncFramework.ComparisonResult">
            <summary>
            Describes the comparison results between scanned files and directories.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.SyncFramework.ComparisonResult.Identical">
            <summary>
            The two files are identical. That means, they have the same size. There
            is nothing such as a CRC check.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.SyncFramework.ComparisonResult.MissingInLocalFolder">
            <summary>
            The file is present in the local folder but is missing in the remote one.
            This is also raised for missing folders.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.SyncFramework.ComparisonResult.MissingInRemoteFolder">
            <summary>
            The file is present in the local folder but is missing in the remote one.
            This is also raised for missing folders.
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.SyncFramework.ComparisonResult.SizeDifferent">
            <summary>
            The two files have different sizes.
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.nChildState">
            <summary>
            This structure defines the different states which are possible
            about the child state
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nChildState.HasChilds">
            <summary>
            Indicates that the folder has some childs (folders or files)
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nChildState.HasNoChilds">
            <summary>
            Indicates that the folder has no childs (folders or files)
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.nChildState.HasNotEvaluated">
            <summary>
            Indicates that SharpBox did not evaluated it. To evaluate this 
            just call GetChild
            </summary>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.StorageProvider.CIFS.CIFSConfiguration">
            <summary>
            This class implements all BoxNet specific configurations
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.StorageProvider.CIFS.CIFSConfiguration.#ctor(System.String)">
            <summary>
            ctor of the Box.Net configuration
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.CIFS.CIFSConfiguration.TrustUnsecureSSLConnections">
            <summary>
            Specifies if we allow not secure ssl connections
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.CIFS.CIFSConfiguration.Limits">
            <summary>
            Sets or gets the limits of a webdav configuration
            </summary>
        </member>
        <member name="P:AppLimit.CloudComputing.SharpBox.StorageProvider.CIFS.CIFSConfiguration.ServiceLocator">
            <summary>
            Gets the webdav service url
            </summary>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMultipartFormDataSupport.PrepareWebRequest(System.Net.WebRequest)">
            <summary>
            This method prepares a webrequest to be a multpart data requets
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMultipartFormDataSupport.PrepareRequestStream(System.IO.Stream,System.String)">
            <summary>
            This method opens a network file data stream which means the http(s)
            will be established to the server
            </summary>
            <param name="requestStream"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMultipartFormDataSupport.FinalizeNetworkFileDataStream(System.IO.Stream)">
            <summary>
            This method writes the footer into the data stream 
            </summary>
            <param name="networkStream"></param>
        </member>
        <member name="M:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestMultipartFormDataSupport.IsRequestMultiPartUpload(System.Net.WebRequest)">
            <summary>
            Check if the current request us a multipart upload file
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecutingEventArgs">
            <summary>
            This class contains the argument of the WebRequestExecuting event
            </summary>
        </member>
        <member name="F:AppLimit.CloudComputing.SharpBox.Common.Net.Web.WebRequestExecutingEventArgs.request">
            <summary>
            The webrequest which has to be processed as self
            </summary>
        </member>
    </members>
</doc>
