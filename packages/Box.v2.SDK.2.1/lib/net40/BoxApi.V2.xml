<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BoxApi.V2</name>
    </assembly>
    <members>
        <member name="T:BoxApi.V2.Authentication.Legacy.BoxAuthenticator">
            <summary>
                Provides methods for generating tickets and user authorization tokens
            </summary>
        </member>
        <member name="M:BoxApi.V2.Authentication.Legacy.BoxAuthenticator.#ctor(System.String,System.String,System.Net.WebProxy,BoxApi.V2.Model.Enum.BoxManagerOptions)">
            <summary>
                Instantiates a BoxAuthenticator
            </summary>
            <param name="apiKey">The API key for your application</param>
            <param name="ticket">The ticket associated with the current authorization token request, if you already have one.</param>
            <param name="proxy">An optional web proxy that should be used in conjunction with any calls to Box</param>
        </member>
        <member name="M:BoxApi.V2.Authentication.Legacy.BoxAuthenticator.GetAuthorizationUrl">
            <summary>
                Generates a Box-pointing URL to which a user can be redirected for authentication
            </summary>
            <returns>The URL</returns>
            <remarks>A Ticket is requested from Box and locally set as a result of this call.</remarks>
        </member>
        <member name="M:BoxApi.V2.Authentication.Legacy.BoxAuthenticator.GetAuthorizationToken">
            <summary>
                Swaps the existing ticket for an authorization token that can be used by your application to access the user's Box.  This can only be performed after the user has authenticated at Box and approved your application to access their data.
            </summary>
            <returns>The user's new authorization token</returns>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxAuthenticator.Proxy">
            <summary>
                A web proxy that should be used in conjunction with any calls to Box.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxAuthenticator.ApiKey">
            <summary>
                The API key for your application
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxAuthenticator.Ticket">
            <summary>
                The ticket associated with the current authorization token request
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxAuthenticator.AuthToken">
            <summary>
                The authorization token
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxAuthToken.Status">
            <summary>
                Status of the auth token request
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxAuthToken.AuthToken">
            <summary>
                The auth token, if a valid one was returned
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxAuthToken.User">
            <summary>
                The user associated with the auth token
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxTicket.Status">
            <summary>
                Status of the ticket request
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxTicket.Ticket">
            <summary>
                The ticket, if a valid one was returned
            </summary>
        </member>
        <member name="T:BoxApi.V2.Authentication.Legacy.BoxToken">
            <summary>
                Tokens provide an easy and instant way to authenticate a user to Box, even if they don’t have a Box account. When the token is created, a special folder for only your app is created in the user’s account. The token can only be used to access this specific folder and any items contained within it.
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.EntityBase">
            <summary>
                The base type for objects returned from Box.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EntityBase.Type">
            <summary>
                The type of item being returned.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxToken.Token">
            <summary>
                The auth token that can be used to access the user’s account
            </summary>
        </member>
        <member name="P:BoxApi.V2.Authentication.Legacy.BoxToken.Item">
            <summary>
                The folder that has been created in the user’s account for your app
            </summary>
        </member>
        <member name="T:BoxApi.V2.Authentication.Legacy.LegacyRequestAuthenticator">
            <summary>
            Adds v1 authentication headers to HTTP requests
            </summary>
        </member>
        <member name="M:BoxApi.V2.Authentication.Legacy.LegacyRequestAuthenticator.#ctor(System.String,System.String)">
            <summary>
            Instantiates a request authenticator
            </summary>
            <param name="applicationApiKey">The Box application's API key</param>
            <param name="accessToken">The Box user's v1 access token</param>
        </member>
        <member name="T:BoxApi.V2.Authentication.OAuth2.OAuth2RequestAuthenticator">
            <summary>
            Adds v2 (OAuth 2.0) authentication headers to HTTP requests
            </summary>
        </member>
        <member name="M:BoxApi.V2.Authentication.OAuth2.OAuth2RequestAuthenticator.#ctor(System.String)">
            <summary>
            Instantiates a request authenticator
            </summary>
            <param name="accessToken">The Box user's OAuth 2.0 access token.</param>
        </member>
        <member name="T:BoxApi.V2.BoxManager">
            <summary>
                Provides methods for using the Box v2 API.  This class is not designed to be thread-safe.
            </summary>
        </member>
        <member name="T:BoxApi.V2.IEnterpriseManager">
            <summary>
            Methods available to Box enterprise admins/co-Admins
            </summary>
        </member>
        <member name="T:BoxApi.V2.IUserManager">
            <summary>
            Methods available to Box standalone users
            </summary>
        </member>
        <member name="T:BoxApi.V2.IFile">
            <summary>
            Methods for working with Box files
            </summary>
        </member>
        <member name="T:BoxApi.V2.ISharedFile">
            <summary>
            Methods for working with shared Box files
            </summary>
        </member>
        <member name="M:BoxApi.V2.ISharedFile.Get(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="file">The file to get</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The fetched file</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFile.GetFile(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="id">The ID of the file to get</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The fetched file</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFile.GetFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a shared file
            </summary>
            <param name="id">The ID of the file to get</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The shared file</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFile.Get(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved File</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to get</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ISharedFile.GetFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved File</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to get</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ISharedFile.GetFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a shared file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved File</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to get</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(BoxApi.V2.Model.Folder,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(BoxApi.V2.Model.Folder,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.String,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parent">The folder in which to create the file</param>
            <param name="content">The file's data</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="content">The file's data</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(BoxApi.V2.Model.File)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="file">The file to read</param>
            <returns>The raw file contents</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(System.String)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="id">The ID of the file to read</param>
            <returns>The raw file contents</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(System.String,System.String)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <returns>The raw file contents</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(BoxApi.V2.Model.File,System.IO.Stream)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="file">The file to read</param>
            <param name="output">A stream to which the file contents will be written</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(System.String,System.IO.Stream)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="id">The ID of the file to read</param>
            <param name="output">A stream to which the file contents will be written</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(System.String,System.String,System.IO.Stream)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="output">A stream to which the file contents will be written</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(System.Action{System.Byte[]},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file contents</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to read</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(System.Action{System.Byte[]},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file contents</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Read(System.Action{System.Byte[]},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="onSuccess">Action to perform with the file contents</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
        </member>
        <member name="M:BoxApi.V2.IFile.ReadToStream(System.Action{System.IO.Stream},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file stream</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to read</param>
        </member>
        <member name="M:BoxApi.V2.IFile.ReadToStream(System.Action{System.IO.Stream},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file stream</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
        </member>
        <member name="M:BoxApi.V2.IFile.ReadToStream(System.Action{System.IO.Stream},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="onSuccess">Action to perform with the file stream</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(BoxApi.V2.Model.File,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="file">The file to update</param>
            <param name="content">A stream containing the file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(BoxApi.V2.Model.File,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="file">The file to update</param>
            <param name="content">The file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(System.String,System.String,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">A stream containing the file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(System.String,System.String,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="content">A stream containing the file's data</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="content">The file's data</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">A stream containing the file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Copy(BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="file">The file to copy</param>
            <param name="newParent">The destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Copy(BoxApi.V2.Model.File,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="file">The file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CopyFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="id">The ID of the file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.CopyFile(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a shared file to the specified folder
            </summary>
            <param name="id">The ID of the file to copy</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Copy(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to copy</param>
            <param name="newParent">The destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Copy(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform following a successful File operation</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CopyFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform following a successful File operation</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.CopyFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a shared file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform following a successful File operation</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to copy</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.ShareLink(BoxApi.V2.Model.File,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="file">The file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>A file object populated with the shared link</returns>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFile.ShareFileLink(System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="id">The ID of the file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>A file object populated with the shared link</returns>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFile.ShareLink(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="onSuccess">Action to perform with the linked file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFile.ShareFileLink(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="onSuccess">Action to perform with the linked file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFile.Move(BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="file">The file to move</param>
            <param name="newParent">The destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Move(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="file">The file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.MoveFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="id">The ID of the file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Move(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to move</param>
            <param name="newParent">The destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Move(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.MoveFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Rename(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="file">The file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.RenameFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="id">The ID of the file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Rename(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="onSuccess">Action to perform with the renamed file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.RenameFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="onSuccess">Action to perform with the renamed file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.UpdateDescription(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="file">The file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.UpdateFileDescription(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="id">The ID of the file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.UpdateDescription(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="onSuccess">Action to perform with the update file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.UpdateFileDescription(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="onSuccess">Action to perform with the update file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Update(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Update one or more of a file's name, description, parent, or shared link.
            </summary>
            <param name="file">The file to update</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated file</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.Update(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Update one or more of a file's name, description, parent, or shared link.
            </summary>
            <param name="onSuccess">Action to perform with the update file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Delete(BoxApi.V2.Model.File,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="file">The file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.DeleteFile(System.String,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="id">The ID of the file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.Delete(System.Action,System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.DeleteFile(System.Action,System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.GetVersions(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="file">The file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>A collection of metadata objects</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.GetVersions(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="fileId">The ID of the file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>A collection of metadata objects</returns>
        </member>
        <member name="M:BoxApi.V2.IFile.GetVersions(System.Action{BoxApi.V2.Model.VersionCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved metadata</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFile.GetVersions(System.Action{BoxApi.V2.Model.VersionCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved metadata</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="fileId">The ID of the file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="T:BoxApi.V2.IFolder">
            <summary>
            Methods for working wtih Box folders
            </summary>
        </member>
        <member name="T:BoxApi.V2.ISharedFolder">
            <summary>
            Methods for working with shared Box folders
            </summary>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.Get(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="folder">The folder to get</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>The fetched folder.</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.Get(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="onSuccess">Action to perform with the retrieved Folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to get</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetFolder(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="id">The ID of the folder to get</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>The fetched folder.</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a shared folder
            </summary>
            <param name="id">The ID of the folder to get</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>The fetched folder.</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="onSuccess">Action to perform with the retrieved Folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to get</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="onSuccess">Action to perform with the retrieved Folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to get</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetItems(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="folder">The folder containing the items to retrieve</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="limit">The maximum number of items to return in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The first item to fetch in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>A collection of items representing the folder's contents.</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetItems(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="limit">The maximum number of items to return in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The first item to fetch in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>A collection of items representing the folder's contents.</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetItems(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a shared folder's items
            </summary>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="limit">The maximum number of items to return in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The first item to fetch in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>A collection of items representing the folder's contents.</returns>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetItems(System.Action{BoxApi.V2.Model.ItemCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="onSuccess">Action to perform with the folder's items</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder containing the items to retrieve</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (default: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request (default: 0).</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetItems(System.Action{BoxApi.V2.Model.ItemCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="onSuccess">Action to perform with the folder's items</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ISharedFolder.GetItems(System.Action{BoxApi.V2.Model.ItemCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="onSuccess">Action to perform with the folder's items</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.CreateFolder(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="parent">The folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created folder.</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.CreateFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created folder.</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.CreateFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created Folder</param>
            <param name="onFailure">Action to perform following a failed Folder creation</param>
            <param name="parent">The folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.CreateFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created folder</param>
            <param name="onFailure">Action to perform following a failed folder creation</param>
            <param name="parentId">The ID of he folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.Delete(BoxApi.V2.Model.Folder,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="folder">The folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.IFolder.DeleteFolder(System.String,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="id">The ID of the folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.IFolder.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="onSuccess">Action to perform when the folder is deleted</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.IFolder.DeleteFolder(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="onSuccess">Action to perform when the folder is deleted</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.IFolder.Copy(BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="folder">The folder to copy</param>
            <param name="newParent">The destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.Copy(BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="folder">The folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.CopyFolder(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="id">The ID of the folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.CopyFolder(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a shared folder to the specified folder
            </summary>
            <param name="id">The ID of the folder to copy</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.Copy(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to copy</param>
            <param name="newParent">The destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.Copy(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.CopyFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.CopyFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to copy</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.ShareLink(BoxApi.V2.Model.Folder,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="folder">The folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An object populated with the shared link</returns>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFolder.ShareFolderLink(System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="id">The ID of the folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An object populated with the shared link</returns>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFolder.ShareLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the linked folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFolder.ShareFolderLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the linked folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.IFolder.DisableSharedLink(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="folder">The folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The folder with the disabled shared link</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.DisableSharedLink(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="id">The id of the folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The folder with the disabled shared link</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.DisableSharedLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="onSuccess">Action to take with the returned folder</param>
            <param name="onFailure">Actino to take following a failed folder operation</param>
            <param name="folder">The folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.DisableSharedLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="onSuccess">Action to take with the returned folder</param>
            <param name="onFailure">Actino to take following a failed folder operation</param>
            <param name="id">The id of the folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.Move(BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="folder">The folder to move</param>
            <param name="newParent">The destination folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.Move(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="folder">The folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.MoveFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="id">The ID of the folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.Move(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to move</param>
            <param name="newParent">The destination folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.Move(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.MoveFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.Rename(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="folder">The folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.RenameFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="id">The ID of the folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.Rename(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="onSuccess">Action to perform with the renamed folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.RenameFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="onSuccess">Action to perform with the renamed folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.UpdateDescription(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Updates a folder's description
            </summary>
            <param name="folder">The folder to update</param>
            <param name="description">The new description for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.UpdateFolderDescription(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Updates a folder's description
            </summary>
            <param name="id">The ID of the folder to update</param>
            <param name="description">The new description for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.UpdateDescription(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Updates a folder's description
            </summary>
            <param name="onSuccess">Action to perform with the updated folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to update</param>
            <param name="description">The new description for the folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IFolder.Update(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Update one or more of a folder's name, description, parent, or shared link.
            </summary>
            <param name="folder">The folder to update</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated folder</returns>
        </member>
        <member name="M:BoxApi.V2.IFolder.Update(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Update one or more of a folder's name, description, parent, or shared link.
            </summary>
            <param name="onSuccess">Action to perform with the updated folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to update</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="T:BoxApi.V2.IStandaloneUser">
            <summary>
            Methods for working with information and events for the current Box user
            </summary>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.Me(System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.UserField})">
            <summary>
                Retrieves information about the user who is currently logged in i.e. the user for whom this auth token was generated. 
            </summary>
            <param name="fields">The properties that should be set on the returned User.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>Returns a single complete user object. An error is returned if a valid auth token is not included in the API request.</returns>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.Me(System.Action{BoxApi.V2.Model.User},System.Action{BoxApi.V2.Model.Error},System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.UserField})">
            <summary>
                Retrieves information about the user who is currently logged in i.e. the user for whom this auth token was generated. 
            </summary>
            <param name="onSuccess">Action to perform with the current user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="fields">The properties that should be set on the returned User.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.GetCurrentStreamPosition">
            <summary>
                Gets the latest event stream position for a user.  When used with GetUserEvents it ensures that events prior to 'now' are not returned.
            </summary>
            <returns>An event stream position</returns>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.GetCurrentStreamPosition(System.Action{System.Int64},System.Action{BoxApi.V2.Model.Error})">
            <summary>
                Gets the latest event stream position for a user.  When used with GetUserEvents it ensures that events prior to 'now' are not returned.
            </summary>
            <param name="onSuccess">Action to perform with the event stream position</param>
            <param name="onFailure">Action to perform following a failed Event operation</param>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.GetUserEvents(System.Int64,BoxApi.V2.Model.Enum.StreamType,System.Int32)">
            <summary>
                Retrieves of events that have occured in a user's account.  Events will occasionally arrive out of order.   You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="streamPosition">The stream position from which to start receiving events.  If left to the default value the earliest events on record for the user will be returned, even if they have happened in the distant past.  Consider using GetCurrentStreamPosition to get a reasonable initial stream position.</param>
            <param name="streamType">Filters the type of events to return. Default is All events (no filter)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <returns>A collection of UserEvents</returns>
            <remarks>You are then expected to call GetUserEvents endpoint with ever increasing streamPosition values, as given back to you with each response, until you get no more events.</remarks>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.GetUserEvents(System.Action{BoxApi.V2.Model.UserEventCollection},System.Action{BoxApi.V2.Model.Error},System.Int64,BoxApi.V2.Model.Enum.StreamType,System.Int32)">
            <summary>
                Retrieves of events that have occured in a user's account.  Events will occasionally arrive out of order.   You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="onSuccess">Action to perform with the retrieved events.</param>
            <param name="onFailure">Action to perform following a failed Event operation</param>
            <param name="streamPosition">The stream position from which to start receiving events.  If left to the default value the earliest events on record for the user will be returned, even if they have happened in the distant past.  Consider using GetCurrentStreamPosition to get a reasonable initial stream position.</param>
            <param name="streamType">Filters the type of events to return. Default is All events (no filter)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <remarks>You are then expected to call GetUserEvents endpoint with ever increasing streamPosition values, as given back to you with each response, until you get no more events.</remarks>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.Search(System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
                Find items that are accessible in a given user’s Box account.
            </summary>
            <param name="query">The string to search for; can be matched against item names, descriptions, text content of a file, and other fields of the different item types.</param>
            <param name="limit">Number of search results to return. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
            <param name="offset">The search result at which to start the response. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
            <returns>A collection of items resulting from the search</returns>
        </member>
        <member name="M:BoxApi.V2.IStandaloneUser.Search(System.Action{BoxApi.V2.Model.SearchResultCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
                Find items that are accessible in a given user’s Box account.
            </summary>
            <param name="query">The string to search for; can be matched against item names, descriptions, text content of a file, and other fields of the different item types.</param>
            <param name="onSuccess">Action to perform following a successful search</param>
            <param name="onFailure">Action to perform following a failed search</param>
            <param name="limit">Number of search results to return. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
            <param name="offset">The search result at which to start the response. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
        </member>
        <member name="T:BoxApi.V2.ICollaboration">
            <summary>
            Methods for working with Box collaborations
            </summary>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.CreateCollaboration(BoxApi.V2.Model.Folder,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="folder">The folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.CreateCollaboration(System.String,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="folderId">The ID of the folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.CreateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="onSuccess">Action to perform with the new collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="folder">The folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.CreateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="onSuccess">Action to perform with the new collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="folderId">The ID of the folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Get(BoxApi.V2.Model.Collaboration,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="collaboration">The collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The existing collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.GetCollaboration(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The existing collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Get(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the existig collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="collaboration">The collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.GetCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the existig collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="collaborationId">The ID of the collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.GetCollaborations(BoxApi.V2.Model.Folder,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="folder">The folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's collaborations</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.GetCollaborations(System.String,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="folderId">The ID of the folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's collaborations</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.GetCollaborations(System.Action{BoxApi.V2.Model.CollaborationCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's collaborations</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation</param>
            <param name="folder">The folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.GetCollaborations(System.Action{BoxApi.V2.Model.CollaborationCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's collaborations</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation</param>
            <param name="folderId">The ID of the folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Update(BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Update(BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role and status in an existing collaboration
            </summary>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.UpdateCollaboration(System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.UpdateCollaboration(System.String,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Updat the collaborator's role and status in an existing collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Update(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Update(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role and status in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.UpdateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.UpdateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role and status in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Delete(BoxApi.V2.Model.Collaboration)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="collaboration">The collaboration to delete</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.DeleteCollaboration(System.String)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to delete</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="onSuccess">Action to perform after the collaboration is deleted</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaboration">The collaboration to delete</param>
        </member>
        <member name="M:BoxApi.V2.ICollaboration.DeleteCollaboration(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="onSuccess">Action to perform after the collaboration is deleted</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaborationId">The ID of the collaboration to delete</param>
        </member>
        <member name="T:BoxApi.V2.ISharedItems">
            <summary>
            Methods for retrieving shared items
            </summary>
        </member>
        <member name="M:BoxApi.V2.ISharedItems.GetSharedItem``1(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.IContentField},System.String)">
            <summary>
                Gets information about a shared item.
            </summary>
            <typeparam name="T">The shared item's type (File or Folder)</typeparam>
            <param name="sharedLinkUrl">The link to the shared item (SharedLink.Url)</param>
            <param name="fields">The properties that should be set on the returned File/Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The shared File/Folder</returns>
            <remarks>The user does not need an authorization token to use this method. Only the API key and shared link url are required.</remarks>
        </member>
        <member name="M:BoxApi.V2.ISharedItems.GetSharedItem``1(System.Action{``0},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.IContentField},System.String)">
            <summary>
                Gets information about a shared item.
            </summary>
            <typeparam name="T">The shared item's type (File or Folder)</typeparam>
            <param name="onSuccess">Action to perform with the shared item</param>
            <param name="onFailure">Action to perform on a failed Shared Item operation</param>
            <param name="sharedLinkUrl">The link to the shared item (SharedLink.Url)</param>
            <param name="fields">The properties that should be set on the returned File/Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <remarks>The user does not need an authorization token to use this method. Only the API key and shared link url are required.</remarks>
        </member>
        <member name="T:BoxApi.V2.IComment">
            <summary>
            Methods for working with Box comments
            </summary>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateComment(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="file">The file on which to commment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The file's new comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateFileComment(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="fileId">The ID of the file on which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="file">The file on which to commment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateFileComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="fileId">The ID of the file on which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateComment(BoxApi.V2.Model.Discussion,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="discussion">The discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's new comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateDiscussionComment(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="discussionId">The ID of the discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's new comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussion">The discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.CreateDiscussionComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussionId">The ID of the discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComment(BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="comment">The comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComment(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="id">The ID of the comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="onSuccess">Action to perform with the retrieved comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="comment">The comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="onSuccess">Action to perform with the retrieved comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="id">The ID of the comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComments(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="file">The file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The file's comments</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.GetFileComments(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="fileId">The ID of the file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The file's comments</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved file comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="file">The file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.GetFileComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved file comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="fileId">The ID of the file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComments(BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="discussion">The discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's comments</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.GetDiscussionComments(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="discussionId">The ID of the discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's comments</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.GetComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="onSuccess">Action to perform with the discussion's comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussion">The discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.GetDiscussionComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="onSuccess">Action to perform with the discussion's comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussionId">The ID of the discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.Update(BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="comment">The comment to update</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.UpdateComment(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="id">The ID of the comment to update</param>
            <param name="message">The comment's new message</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated comment</returns>
        </member>
        <member name="M:BoxApi.V2.IComment.Update(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="onSuccess">Action to perform with the updated comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="comment">The comment to update</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.UpdateComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="onSuccess">Action to perform with the updated comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="id">The ID of the comment to update</param>
            <param name="message">The comment's new message</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IComment.Delete(BoxApi.V2.Model.Comment)">
            <summary>
                Deletes a comment
            </summary>
            <param name="comment">The comment to delete</param>
        </member>
        <member name="M:BoxApi.V2.IComment.DeleteComment(System.String)">
            <summary>
                Deletes a comment
            </summary>
            <param name="id">The ID of the comment to delete</param>
        </member>
        <member name="M:BoxApi.V2.IComment.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Comment)">
            <summary>
                Deletes a comment
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="comment">The comment to delete</param>
        </member>
        <member name="M:BoxApi.V2.IComment.DeleteComment(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Deletes a comment
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="id">The ID of the comment to delete</param>
        </member>
        <member name="T:BoxApi.V2.IDiscussion">
            <summary>
            Methods for working with Box discussions
            </summary>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.CreateDiscussion(BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="folder">The folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new discussion</returns>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.CreateDiscussion(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="folderId">The ID of the folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new discussion</returns>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.CreateDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="onSuccess">Action to perform with the new discussion</param>
            <param name="onFailure">Action to perform following a failed creation</param>
            <param name="folder">The folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.CreateDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="onSuccess">Action to perform with the new discussion</param>
            <param name="onFailure">Action to perform following a failed creation</param>
            <param name="folderId">The ID of the folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussion(BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="discussion">The discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved discussion</returns>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussion(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="id">The ID of the discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved discussion</returns>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="onSuccess">Action to perform with the retrieved discussion</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="discussion">The discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="onSuccess">Action to perform with the retrieved discussion</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="id">The ID of the discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussions(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="folder">The folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's dicussions</returns>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussions(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="folderId">The ID of the folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's dicussions</returns>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussions(System.Action{BoxApi.V2.Model.DiscussionCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's discussions</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="folder">The folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.GetDiscussions(System.Action{BoxApi.V2.Model.DiscussionCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's discussions</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="folderId">The ID of the folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.Delete(BoxApi.V2.Model.Discussion)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="discussion">The discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.DeleteDiscussion(System.String)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="id">The ID of the discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed delete</param>
            <param name="discussion">The discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.IDiscussion.DeleteDiscussion(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed delete</param>
            <param name="id">The ID of the discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                For an individual user, this provides their own user information and content. For an enterprise admin, this provides information on all users in the admin’s enterprise.
            </summary>
            <param name="filterTerm">Only users whose name or login starts with this value will be returned.  Default is no filter.</param>
            <param name="limit">The number of records to return. If no filterTerm, limit, or offset are supplied, all user records are returned.  </param>
            <param name="offset">The record at which to start (used in conjunction with 'limit'.)  Default is the first record.</param>
            <returns>A collection of users matching the supplied filtering criteria</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetUsers(System.Action{BoxApi.V2.Model.EnterpriseUserCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                For an individual user, this provides their own user information and content. For an enterprise admin, this provides information on all users in the admin’s enterprise.
            </summary>
            <param name="onSuccess">Action to perform with the returned users</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="filterTerm">Only users whose name or login starts with this value will be returned.  Default is no filter.</param>
            <param name="limit">The number of records to return. Default is all users.</param>
            <param name="offset">The record at which to start (used in conjunction with 'limit'.)  Default is the first record.</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.Get(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="user">The user to retrieve</param>
            <returns>The requested user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetUser(System.String)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="id">The ID of the user to retrieve</param>
            <returns>The requested user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.Get(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="onSuccess">Action to perform with the retrieved user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The user to retrieve</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetUser(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="onSuccess">Action to perform with the retrieved user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="id">The ID of the user to retrieve</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.CreateUser(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Used to provision a new user in an enterprise. This method only works for enterprise admins.
            </summary>
            <param name="user">The properties to set for the new user.  Name and Login are required.  Warning -- Box tracks a user's space amount in GB, so if you choose to specify the SpaceAmount, it must be at least 1 GB (2^30).</param>
            <returns>The new user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.CreateUser(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.Fields.EnterpriseUserField[])">
            <summary>
            Used to provision a new user in an enterprise. This method only works for enterprise admins.
            </summary>
            <param name="onSuccess">Action to perform with the created user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The properties to set for the new user.  Name and Login are required.  Warning -- Box tracks a user's space amount in GB, so if you choose to specify the SpaceAmount, it must be at least 1 GB (2^30).</param>
            <param name="fields">The properties that should be set on the returned User.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.UpdateUser(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Updates the settings and information about a user. This method only works for enterprise admins
            </summary>
            <param name="user">The user with udpated information</param>
            <returns>A user with the updated information</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.UpdateUser(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Updates the settings and information about a user. This method only works for enterprise admins
            </summary>
            <param name="onSuccess">Action to perform with the updated user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The user with udpated information</param>
            <returns>A user with the updated information</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.Delete(BoxApi.V2.Model.EnterpriseUser,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="user">The user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.DeleteUser(System.String,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="id">The ID of the user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.Delete(System.Action,System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="onSuccess">Action to perform following a successful deletion</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.DeleteUser(System.Action,System.Action{BoxApi.V2.Model.Error},System.String,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="onSuccess">Action to perform following a successful deletion</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="id">The ID of the user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.MoveRootFolderToAnotherUser(BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EnterpriseUser,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="currentOwner">The user whose files will be moved</param>
            <param name="newOwner">The user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
            <returns>The folder as it now exists in the newOwner's Box</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.MoveRootFolderToAnotherUser(System.String,System.String,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="currentOwnerId">The ID of the user whose files will be moved</param>
            <param name="newOwnerId">The ID of the user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
            <returns></returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.MoveRootFolderToAnotherUser(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EnterpriseUser,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="currentOwner">The user whose files will be moved</param>
            <param name="newOwner">The user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.MoveRootFolderToAnotherUser(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="currentOwnerId">The ID of the user whose files will be moved</param>
            <param name="newOwnerId">The ID of the user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetEmailAliases(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="user">The user for whom to retrieve the email aliases</param>
            <returns>A collection of email aliases</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetEmailAliases(System.String)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="userId">The ID of the user for whom to retrieve the email aliases</param>
            <returns>A collection of email aliases</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetEmailAliases(System.Action{BoxApi.V2.Model.EmailAliasCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="onSuccess">An action to perfrom with the email aliases</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="user">The user for whom to retrieve the email aliases</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetEmailAliases(System.Action{BoxApi.V2.Model.EmailAliasCollection},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="onSuccess">An action to perfrom with the email aliases</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the user for whom to retrieve the email aliases</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.AddEmailAlias(BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="user">The user to alias</param>
            <param name="alias">The email alias to add </param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.AddEmailAlias(System.String,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="userId">The ID of the user to alias</param>
            <param name="alias">The email alias to add </param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.AddEmailAlias(System.Action{BoxApi.V2.Model.EmailAlias},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation </param>
            <param name="user">The user to alias</param>
            <param name="alias">The email alias to add </param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.AddEmailAlias(System.Action{BoxApi.V2.Model.EmailAlias},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the user to alias</param>
            <param name="alias">The email alias to add </param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.Delete(BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EmailAlias)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="user">The aliased user</param>
            <param name="alias">The alias to delete </param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.DeleteEmailAlias(System.String,System.String)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="userId">The ID of the aliased user</param>
            <param name="aliasId">The ID of the alias to delete</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.Delete(System.Action,System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EmailAlias)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="onSuccess">An action to perform following a successful delete</param>
            <param name="onFailure">An action to perform following a failed User operation </param>
            <param name="user">The aliased user</param>
            <param name="alias">The alias to delete</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.DeleteEmailAlias(System.Action,System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="onSuccess">An action to perform following a successful delete</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the aliased user</param>
            <param name="aliasId">The ID of the alias to delete</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.ChangePrimaryLogin(BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="user">The user to update</param>
            <param name="login">The new login</param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.ChangePrimaryLogin(System.String,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="userId">The ID of the user to update</param>
            <param name="login">The new login</param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.ChangePrimaryLogin(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="user">The user to update</param>
            <param name="login">The new login</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.ChangePrimaryLogin(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the user to update</param>
            <param name="login">The new login</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.ConvertToStandaloneUser(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            converts them to a standalone free user.
            </summary>
            <param name="user">The enterprise user to convert</param>
            <returns>The standalone user</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.ConvertToStandaloneUser(System.Action{BoxApi.V2.Model.User},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Rolls a user out of an enterprise and converts them to a standalone free user.
            </summary>
            <param name="onSuccess">Action to perform with the standalone user</param>
            <param name="onFailure">Action to perform following failed conversion</param>
            <param name="user">The enterprise user to convert</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetEnterpriseEvents(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},BoxApi.V2.Model.Enum.EnterpriseEventType[])">
            <summary>
                Retrieves the events that have occurred in an enterprise.  Events will occasionally arrive out of order.  You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="offset">The item at which to start.  Deault is 0 (the earliest known event.)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <param name="createdAfter">A lower bound on the timestamp of the events returned</param>
            <param name="createdBefore">An upper bound on the timestamp of the events returned</param>
            <param name="eventTypes">A list of event types to filter by.  Only events of these types will be returned.</param>
            <returns>A collection of EnterpriseEvents.</returns>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetEnterpriseEvents(System.Action{BoxApi.V2.Model.EnterpriseEventCollection},System.Action{BoxApi.V2.Model.Error},System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},BoxApi.V2.Model.Enum.EnterpriseEventType[])">
            <summary>
                Retrieves the events that have occurred in an enterprise.  Events will occasionally arrive out of order.  You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="onSuccess">Action to perform with the retrieved events</param>
            <param name="onFailure">Action to perform following a failed Event operation</param>
            <param name="offset">The item at which to start.  Deault is 0 (the earliest known event.)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <param name="createdAfter">A lower bound on the timestamp of the events returned</param>
            <param name="createdBefore">An upper bound on the timestamp of the events returned</param>
            <param name="eventTypes">A list of event types to filter by.  Only events of these types will be returned.</param>
        </member>
        <member name="M:BoxApi.V2.IEnterpriseManager.GetEnterpriseEvents(System.Nullable{System.DateTime},System.Nullable{System.DateTime},BoxApi.V2.Model.Enum.EnterpriseEventType[])">
            <summary>
                Retrieves the events that have occurred in an enterprise.  Events will occasionally arrive out of order.  You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="createdAfter">A lower bound on the timestamp of the events returned</param>
            <param name="createdBefore">An upper bound on the timestamp of the events returned</param>
            <param name="eventTypes">A list of event types to filter by.  Only events of these types will be returned.</param>
            <returns>A collection of EnterpriseEvents.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaboration(BoxApi.V2.Model.Folder,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="folder">The folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaboration(System.String,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="folderId">The ID of the folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaborationByEmail(BoxApi.V2.Model.Folder,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="folder">The folder in which to collaborate</param>
            <param name="emailAddress">The email address of the collaborator (does not need to be a Box user)</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaborationByEmail(System.String,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="folderId">The ID of the folder in which to collaborate</param>
            <param name="emailAddress">The email address of the collaborator (does not need to be a Box user)</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="onSuccess">Action to perform with the new collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="folder">The folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="onSuccess">Action to perform with the new collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="folderId">The ID of the folder in which to collaborate</param>
            <param name="userId">The ID of the collaborating user</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaborationByEmail(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="onSuccess">Action to perform with the new collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="folder">The folder in which to collaborate</param>
            <param name="emailAddress">The email address of the collaborator (does not need to be a Box user)</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateCollaborationByEmail(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Add a collaboration for a single user to a folder.
            </summary>
            <param name="onSuccess">Action to perform with the new collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="folderId">The ID of the folder in which to collaborate</param>
            <param name="emailAddress">The email address of the collaborator (does not need to be a Box user)</param>
            <param name="role">The role of the collaborating user</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(BoxApi.V2.Model.Collaboration,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="collaboration">The collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The existing collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCollaboration(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The existing collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the existig collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="collaboration">The collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve the details of an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the existig collaboration</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation </param>
            <param name="collaborationId">The ID of the collaboration to retrieve</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCollaborations(BoxApi.V2.Model.Folder,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="folder">The folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's collaborations</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCollaborations(System.String,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="folderId">The ID of the folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's collaborations</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCollaborations(System.Action{BoxApi.V2.Model.CollaborationCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's collaborations</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation</param>
            <param name="folder">The folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCollaborations(System.Action{BoxApi.V2.Model.CollaborationCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Boolean,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Retrieve all existing collaborations in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's collaborations</param>
            <param name="onFailure">Action to perform after a failed Collaboration operation</param>
            <param name="folderId">The ID of the folder whose collaborations should be retrieved</param>
            <param name="pendingCollaborationsOnly">Retrieve only those collaborations whose status is 'Pending'</param>
            <param name="fields">The properties that should be set on the Entries of the returned CollaborationCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role and status in an existing collaboration
            </summary>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateCollaboration(System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateCollaboration(System.String,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Updat the collaborator's role and status in an existing collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated collaboration</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role and status in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaboration">The collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.Enum.CollaborationRole,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateCollaboration(System.Action{BoxApi.V2.Model.Collaboration},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.Enum.CollaborationRole,BoxApi.V2.Model.Enum.Status,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CollaborationField})">
            <summary>
                Update the collaborator's role and status in an existing collaboration
            </summary>
            <param name="onSuccess">Action to perform with the updated collaboration</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaborationId">The ID of the collaboration to update</param>
            <param name="role">The collaborator's new role</param>
            <param name="status">The collaborator's new status</param>
            <param name="fields">The properties that should be set on the returned Collaboration object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(BoxApi.V2.Model.Collaboration)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="collaboration">The collaboration to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteCollaboration(System.String)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="collaborationId">The ID of the collaboration to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Collaboration)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="onSuccess">Action to perform after the collaboration is deleted</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaboration">The collaboration to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteCollaboration(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Delete a collaboration
            </summary>
            <param name="onSuccess">Action to perform after the collaboration is deleted</param>
            <param name="onFailure">Action to perform following a failed Collaboration operation</param>
            <param name="collaborationId">The ID of the collaboration to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateComment(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="file">The file on which to commment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The file's new comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFileComment(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="fileId">The ID of the file on which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="file">The file on which to commment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFileComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a file
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="fileId">The ID of the file on which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateComment(BoxApi.V2.Model.Discussion,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="discussion">The discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's new comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateDiscussionComment(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="discussionId">The ID of the discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's new comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussion">The discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateDiscussionComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Add a comment to a discussion
            </summary>
            <param name="onSuccess">The action to perform with the added comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussionId">The ID of the discussion in which to comment</param>
            <param name="message">The message to add</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComment(BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="comment">The comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComment(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="id">The ID of the comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="onSuccess">Action to perform with the retrieved comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="comment">The comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves a comment
            </summary>
            <param name="onSuccess">Action to perform with the retrieved comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="id">The ID of the comment to retrieve</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComments(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="file">The file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The file's comments</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFileComments(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="fileId">The ID of the file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The file's comments</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved file comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="file">The file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFileComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments for a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved file comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="fileId">The ID of the file whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComments(BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="discussion">The discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's comments</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussionComments(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="discussionId">The ID of the discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The discussion's comments</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="onSuccess">Action to perform with the discussion's comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussion">The discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussionComments(System.Action{BoxApi.V2.Model.CommentCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Retrieves all the comments in a discussion
            </summary>
            <param name="onSuccess">Action to perform with the discussion's comments</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="discussionId">The ID of the discussion whose comments are to be retrieved</param>
            <param name="fields">The properties that should be set on the returned CommentCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="comment">The comment to update</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateComment(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="id">The ID of the comment to update</param>
            <param name="message">The comment's new message</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The updated comment</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Comment,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="onSuccess">Action to perform with the updated comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="comment">The comment to update</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateComment(System.Action{BoxApi.V2.Model.Comment},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.CommentField})">
            <summary>
                Updates a comment's message
            </summary>
            <param name="onSuccess">Action to perform with the updated comment</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="id">The ID of the comment to update</param>
            <param name="message">The comment's new message</param>
            <param name="fields">The properties that should be set on the returned Comment.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(BoxApi.V2.Model.Comment)">
            <summary>
                Deletes a comment
            </summary>
            <param name="comment">The comment to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteComment(System.String)">
            <summary>
                Deletes a comment
            </summary>
            <param name="id">The ID of the comment to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Comment)">
            <summary>
                Deletes a comment
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="comment">The comment to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteComment(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Deletes a comment
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed Comment operation</param>
            <param name="id">The ID of the comment to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateDiscussion(BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="folder">The folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new discussion</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateDiscussion(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="folderId">The ID of the folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new discussion</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="onSuccess">Action to perform with the new discussion</param>
            <param name="onFailure">Action to perform following a failed creation</param>
            <param name="folder">The folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Creates a new discussion for a folder
            </summary>
            <param name="onSuccess">Action to perform with the new discussion</param>
            <param name="onFailure">Action to perform following a failed creation</param>
            <param name="folderId">The ID of the folder for which to create a discussion</param>
            <param name="name">The name of the discussion</param>
            <param name="description">An optional discription of the discussion</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussion(BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="discussion">The discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved discussion</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussion(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="id">The ID of the discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The retrieved discussion</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="onSuccess">Action to perform with the retrieved discussion</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="discussion">The discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussion(System.Action{BoxApi.V2.Model.Discussion},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves an existing discussion
            </summary>
            <param name="onSuccess">Action to perform with the retrieved discussion</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="id">The ID of the discussion to retrieve</param>
            <param name="fields">The properties that should be set on the returned Discussion.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussions(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="folder">The folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's dicussions</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussions(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="folderId">The ID of the folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The folder's dicussions</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussions(System.Action{BoxApi.V2.Model.DiscussionCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's discussions</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="folder">The folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetDiscussions(System.Action{BoxApi.V2.Model.DiscussionCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.DiscussionField})">
            <summary>
                Retrieves all discussions for the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the folder's discussions</param>
            <param name="onFailure">Action to perform following a failed retrieval</param>
            <param name="folderId">The ID of the folder whose dicussions should be retrieved</param>
            <param name="fields">The properties that should be set on the Entries of the returned DiscussionCollection.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(BoxApi.V2.Model.Discussion)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="discussion">The discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteDiscussion(System.String)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="id">The ID of the discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Discussion)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed delete</param>
            <param name="discussion">The discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteDiscussion(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Deletes a discussion from a folder
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed delete</param>
            <param name="id">The ID of the discussion to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCurrentStreamPosition">
            <summary>
                Gets the latest event stream position for a user.  When used with GetUserEvents it ensures that events prior to 'now' are not returned.
            </summary>
            <returns>An event stream position</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetCurrentStreamPosition(System.Action{System.Int64},System.Action{BoxApi.V2.Model.Error})">
            <summary>
                Gets the latest event stream position for a user.  When used with GetUserEvents it ensures that events prior to 'now' are not returned.
            </summary>
            <param name="onSuccess">Action to perform with the event stream position</param>
            <param name="onFailure">Action to perform following a failed Event operation</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetUserEvents(System.Int64,BoxApi.V2.Model.Enum.StreamType,System.Int32)">
            <summary>
                Retrieves of events that have occured in a user's account.  Events will occasionally arrive out of order.   You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="streamPosition">The stream position from which to start receiving events.  If left to the default value the earliest events on record for the user will be returned, even if they have happened in the distant past.  Consider using GetCurrentStreamPosition to get a reasonable initial stream position.</param>
            <param name="streamType">Filters the type of events to return. Default is All events (no filter)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <returns>A collection of UserEvents</returns>
            <remarks>You are then expected to call GetUserEvents endpoint with ever increasing streamPosition values, as given back to you with each response, until you get no more events.</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetUserEvents(System.Action{BoxApi.V2.Model.UserEventCollection},System.Action{BoxApi.V2.Model.Error},System.Int64,BoxApi.V2.Model.Enum.StreamType,System.Int32)">
            <summary>
                Retrieves of events that have occured in a user's account.  Events will occasionally arrive out of order.   You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="onSuccess">Action to perform with the retrieved events.</param>
            <param name="onFailure">Action to perform following a failed Event operation</param>
            <param name="streamPosition">The stream position from which to start receiving events.  If left to the default value the earliest events on record for the user will be returned, even if they have happened in the distant past.  Consider using GetCurrentStreamPosition to get a reasonable initial stream position.</param>
            <param name="streamType">Filters the type of events to return. Default is All events (no filter)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <remarks>You are then expected to call GetUserEvents endpoint with ever increasing streamPosition values, as given back to you with each response, until you get no more events.</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetEnterpriseEvents(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},BoxApi.V2.Model.Enum.EnterpriseEventType[])">
            <summary>
                Retrieves the events that have occurred in an enterprise.  Events will occasionally arrive out of order.  You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="offset">The item at which to start.  Deault is 0 (the earliest known event.)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <param name="createdAfter">A lower bound on the timestamp of the events returned</param>
            <param name="createdBefore">An upper bound on the timestamp of the events returned</param>
            <param name="eventTypes">A list of event types to filter by.  Only events of these types will be returned.</param>
            <returns>A collection of EnterpriseEvents.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetEnterpriseEvents(System.Nullable{System.DateTime},System.Nullable{System.DateTime},BoxApi.V2.Model.Enum.EnterpriseEventType[])">
            <summary>
                Retrieves the events that have occurred in an enterprise.  Events will occasionally arrive out of order.  You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="createdAfter">A lower bound on the timestamp of the events returned</param>
            <param name="createdBefore">An upper bound on the timestamp of the events returned</param>
            <param name="eventTypes">A list of event types to filter by.  Only events of these types will be returned.</param>
            <returns>A collection of EnterpriseEvents.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetEnterpriseEvents(System.Action{BoxApi.V2.Model.EnterpriseEventCollection},System.Action{BoxApi.V2.Model.Error},System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},BoxApi.V2.Model.Enum.EnterpriseEventType[])">
            <summary>
                Retrieves the events that have occurred in an enterprise.  Events will occasionally arrive out of order.  You may need to buffer events and apply them in a logical order.
            </summary>
            <param name="onSuccess">Action to perform with the retrieved events</param>
            <param name="onFailure">Action to perform following a failed Event operation</param>
            <param name="offset">The item at which to start.  Deault is 0 (the earliest known event.)</param>
            <param name="limit">The maximum number of events to return with this request. Default is 100.</param>
            <param name="createdAfter">A lower bound on the timestamp of the events returned</param>
            <param name="createdBefore">An upper bound on the timestamp of the events returned</param>
            <param name="eventTypes">A list of event types to filter by.  Only events of these types will be returned.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(BoxApi.V2.Model.Folder,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new empty file in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(BoxApi.V2.Model.Folder,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.String,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parent">The folder in which to create the file</param>
            <param name="content">The file's data</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.IO.Stream,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="content">The file's data</param>
            <param name="name">The file's name</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parent">The folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Byte[],System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Creates a new file with the provided content in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created File</param>
            <param name="onFailure">Action to perform following a failed File creation</param>
            <param name="parentId">The ID of the folder in which to create the file</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="file">The file to get</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The fetched file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFile(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="id">The ID of the file to get</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The fetched file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a shared file
            </summary>
            <param name="id">The ID of the file to get</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The shared file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved File</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to get</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved File</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to get</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Retrieves a shared file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved File</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to get</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(BoxApi.V2.Model.File)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="file">The file to read</param>
            <returns>The raw file contents</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.String)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="id">The ID of the file to read</param>
            <returns>The raw file contents</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(BoxApi.V2.Model.File,System.Int32,System.Int32)">
            <summary>
                Retrieve a range of the specified file content
            </summary>
            <param name="file">The file to read</param>
            <param name="firstByte">The first byte to of the range</param>
            <param name="lastByte">The last byte of the range</param>
            <returns>The raw file content range</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.String,System.Int64,System.Int64)">
            <summary>
                Retrieve a range of the specified file content
            </summary>
            <param name="id">The ID of the file to read</param>
            <param name="firstByte">The first byte to of the range</param>
            <param name="lastByte">The last byte of the range</param>
            <returns>The raw file content range</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.String,System.String)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <returns>The raw file contents</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(BoxApi.V2.Model.File,System.IO.Stream)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="file">The file to read</param>
            <param name="output">A stream to which the file contents will be written</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.String,System.IO.Stream)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="id">The ID of the file to read</param>
            <param name="output">A stream to which the file contents will be written</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.String,System.String,System.IO.Stream)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="output">A stream to which the file contents will be written</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.Action{System.Byte[]},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file contents</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to read</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.Action{System.Byte[]},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file contents</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Read(System.Action{System.Byte[]},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="onSuccess">Action to perform with the file contents</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ReadToStream(System.Action{System.IO.Stream},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file stream</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to read</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ReadToStream(System.Action{System.IO.Stream},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Retrieve the contents of the specified file
            </summary>
            <param name="onSuccess">Action to perform with the file stream</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ReadToStream(System.Action{System.IO.Stream},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
                Retrieve the contents of a shared file
            </summary>
            <param name="onSuccess">Action to perform with the file stream</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to read</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(BoxApi.V2.Model.File,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="file">The file to update</param>
            <param name="content">A stream containing the file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(BoxApi.V2.Model.File,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="file">The file to update</param>
            <param name="content">The file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(System.String,System.String,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">A stream containing the file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(System.String,System.String,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An updated file object</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="content">A stream containing the file's data</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="content">The file's data</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.IO.Stream,System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">A stream containing the file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Write(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Byte[],System.String)">
            <summary>
                Updates the content of a file
            </summary>
            <param name="onSuccess">Action to perform with the successfully written file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to update</param>
            <param name="name">The file's name</param>
            <param name="content">The file's data</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="file">The file to copy</param>
            <param name="newParent">The destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(BoxApi.V2.Model.File,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="file">The file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFile(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="id">The ID of the file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFile(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a shared file to the specified folder
            </summary>
            <param name="id">The ID of the file to copy</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to copy</param>
            <param name="newParent">The destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform following a successful File operation</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform following a successful File operation</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Copies a shared file to the specified folder
            </summary>
            <param name="onSuccess">Action to perform following a successful File operation</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to copy</param>
            <param name="sharedLinkUrl">The shared link for the file</param>
            <param name="newParentId">The ID of the destination folder for the copied file</param>
            <param name="newName">The optional new name for the copied file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareLink(BoxApi.V2.Model.File,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="file">The file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>A file object populated with the shared link</returns>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareFileLink(System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="id">The ID of the file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>A file object populated with the shared link</returns>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareLink(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="onSuccess">Action to perform with the linked file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareFileLink(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Creates a shared link to the specified file
            </summary>
            <param name="onSuccess">Action to perform with the linked file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for File.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="file">The file to move</param>
            <param name="newParent">The destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="file">The file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="id">The ID of the file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to move</param>
            <param name="newParent">The destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Moves a file to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Rename(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="file">The file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.RenameFile(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="id">The ID of the file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Rename(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="onSuccess">Action to perform with the renamed file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.RenameFile(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Renames a file
            </summary>
            <param name="onSuccess">Action to perform with the renamed file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to rename</param>
            <param name="newName">The new name for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateDescription(BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="file">The file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateFileDescription(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="id">The ID of the file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateDescription(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="onSuccess">Action to perform with the update file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateFileDescription(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Updates a file's description
            </summary>
            <param name="onSuccess">Action to perform with the update file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to update</param>
            <param name="description">The new description for the file</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Update one or more of a file's name, description, parent, or shared link.
            </summary>
            <param name="file">The file to update</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated file</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(System.Action{BoxApi.V2.Model.File},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField},System.String)">
            <summary>
                Update one or more of a file's name, description, parent, or shared link.
            </summary>
            <param name="onSuccess">Action to perform with the update file</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to update</param>
            <param name="fields">The properties that should be set on the returned File object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(BoxApi.V2.Model.File,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="file">The file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteFile(System.String,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="id">The ID of the file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(System.Action,System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteFile(System.Action,System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
                Deletes a file from the user's Box
            </summary>
            <param name="onSuccess">Action to perform following a successful delete</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="id">The ID of the file to delete</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetVersions(BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="file">The file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>A collection of metadata objects</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetVersions(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="fileId">The ID of the file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>A collection of metadata objects</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetVersions(System.Action{BoxApi.V2.Model.VersionCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.File,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved metadata</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="file">The file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetVersions(System.Action{BoxApi.V2.Model.VersionCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FileField})">
            <summary>
                Retrieves metadata about older versions of a file
            </summary>
            <param name="onSuccess">Action to perform with the retrieved metadata</param>
            <param name="onFailure">Action to perform following a failed File operation</param>
            <param name="fileId">The ID of the file for which to retrieve metadata</param>
            <param name="fields">The properties that should be set on the returned VersionCollection.Entries.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Search(System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
                Find items that are accessible in a given user’s Box account.
            </summary>
            <param name="query">The string to search for; can be matched against item names, descriptions, text content of a file, and other fields of the different item types.</param>
            <param name="limit">Number of search results to return. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
            <param name="offset">The search result at which to start the response. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
            <returns>A collection of items resulting from the search</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Search(System.Action{BoxApi.V2.Model.SearchResultCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
                Find items that are accessible in a given user’s Box account.
            </summary>
            <param name="query">The string to search for; can be matched against item names, descriptions, text content of a file, and other fields of the different item types.</param>
            <param name="onSuccess">Action to perform following a successful search</param>
            <param name="onFailure">Action to perform following a failed search</param>
            <param name="limit">Number of search results to return. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
            <param name="offset">The search result at which to start the response. If both an offset and limit are specified, the offset must be a multiple of the limit.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.EnsureOffsetIsMultipleOfLimit(System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Ensures that offset is an even multiple of limit if both are nonzero.
            </summary>
            <param name="limit">Number of search results to return.</param>
            <param name="offset">The search result at which to start the response.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetSharedItem``1(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.IContentField},System.String)">
            <summary>
                Gets information about a shared item.
            </summary>
            <typeparam name="T">The shared item's type (File or Folder)</typeparam>
            <param name="sharedLinkUrl">The link to the shared item (SharedLink.Url)</param>
            <param name="fields">The properties that should be set on the returned File/Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <returns>The shared File/Folder</returns>
            <remarks>The user does not need an authorization token to use this method. Only the API key and shared link url are required.</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetSharedItem``1(System.Action{``0},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.IContentField},System.String)">
            <summary>
                Gets information about a shared item.
            </summary>
            <typeparam name="T">The shared item's type (File or Folder)</typeparam>
            <param name="onSuccess">Action to perform with the shared item</param>
            <param name="onFailure">Action to perform on a failed Shared Item operation</param>
            <param name="sharedLinkUrl">The link to the shared item (SharedLink.Url)</param>
            <param name="fields">The properties that should be set on the returned File/Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <remarks>The user does not need an authorization token to use this method. Only the API key and shared link url are required.</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateToken(System.String)">
            <summary>
                Create a sandboxed authentication token and corresponding folder for a user.  The user does not need to previously have a registered Box account.
            </summary>
            <param name="emailAddress">The sanboxed user's email address</param>
            <returns>A sandboxed authentication token</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateToken(System.Action{BoxApi.V2.Authentication.Legacy.BoxToken},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Create a sandboxed authentication token and corresponding folder for a user.  The user does not need to previously have a registered Box account.
            </summary>
            <param name="onSuccess">Action to perform with the sandboxed authentication token</param>
            <param name="onFailure">Action to perform following a failed Token operation</param>
            <param name="emailAddress">The user's email address</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Me(System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.UserField})">
            <summary>
                Retrieves information about the user who is currently logged in i.e. the user for whom this auth token was generated. 
            </summary>
            <param name="fields">The properties that should be set on the returned User.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>Returns a single complete user object. An error is returned if a valid auth token is not included in the API request.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Me(System.Action{BoxApi.V2.Model.User},System.Action{BoxApi.V2.Model.Error},System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.UserField})">
            <summary>
                Retrieves information about the user who is currently logged in i.e. the user for whom this auth token was generated. 
            </summary>
            <param name="onSuccess">Action to perform with the current user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="fields">The properties that should be set on the returned User.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                For an individual user, this provides their own user information and content. For an enterprise admin, this provides information on all users in the admin’s enterprise.
            </summary>
            <param name="filterTerm">Only users whose name or login starts with this value will be returned.  Default is no filter.</param>
            <param name="limit">The number of records to return. If no filterTerm, limit, or offset are supplied, all user records are returned.  </param>
            <param name="offset">The record at which to start (used in conjunction with 'limit'.)  Default is the first record.</param>
            <returns>A collection of users matching the supplied filtering criteria</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetUsers(System.Action{BoxApi.V2.Model.EnterpriseUserCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                For an individual user, this provides their own user information and content. For an enterprise admin, this provides information on all users in the admin’s enterprise.
            </summary>
            <param name="onSuccess">Action to perform with the returned users</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="filterTerm">Only users whose name or login starts with this value will be returned.  Default is no filter.</param>
            <param name="limit">The number of records to return. Default is all users.</param>
            <param name="offset">The record at which to start (used in conjunction with 'limit'.)  Default is the first record.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="user">The user to retrieve</param>
            <returns>The requested user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetUser(System.String)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="id">The ID of the user to retrieve</param>
            <returns>The requested user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="onSuccess">Action to perform with the retrieved user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The user to retrieve</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetUser(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
                Retrieves a single user
            </summary>
            <param name="onSuccess">Action to perform with the retrieved user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="id">The ID of the user to retrieve</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateUser(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Used to provision a new user in an enterprise. This method only works for enterprise admins.
            </summary>
            <param name="user">The properties to set for the new user.  Name and Login are required.  Warning -- Box tracks a user's space amount in GB, so if you choose to specify the SpaceAmount, it must be at least 1 GB (2^30).</param>
            <returns>The new user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateUser(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.Fields.EnterpriseUserField[])">
            <summary>
            Used to provision a new user in an enterprise. This method only works for enterprise admins.
            </summary>
            <param name="onSuccess">Action to perform with the created user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The properties to set for the new user.  Name and Login are required.  Warning -- Box tracks a user's space amount in GB, so if you choose to specify the SpaceAmount, it must be at least 1 GB (2^30).</param>
            <param name="fields">The properties that should be set on the returned User.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The new user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateUser(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Updates the settings and information about a user. This method only works for enterprise admins
            </summary>
            <param name="user">The user with udpated information</param>
            <returns>A user with the updated information</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateUser(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Updates the settings and information about a user. This method only works for enterprise admins
            </summary>
            <param name="onSuccess">Action to perform with the updated user</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The user with udpated information</param>
            <returns>A user with the updated information</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(BoxApi.V2.Model.EnterpriseUser,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="user">The user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteUser(System.String,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="id">The ID of the user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(System.Action,System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="onSuccess">Action to perform following a successful deletion</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="user">The user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteUser(System.Action,System.Action{BoxApi.V2.Model.Error},System.String,System.Boolean,System.Boolean)">
            <summary>
                Deletes a user from an enterprise account
            </summary>
            <param name="onSuccess">Action to perform following a successful deletion</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="id">The ID of the user to delete</param>
            <param name="notify">Whether to notify the user by email that their account has been deleted.  Default is to notify them.</param>
            <param name="force">Whether to force the deletion if the user has items in their Box.  Default is to not force the deletion.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if the 'force' is false and the user has items in their Box</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveRootFolderToAnotherUser(BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EnterpriseUser,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="currentOwner">The user whose files will be moved</param>
            <param name="newOwner">The user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
            <returns>The folder as it now exists in the newOwner's Box</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveRootFolderToAnotherUser(System.String,System.String,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="currentOwnerId">The ID of the user whose files will be moved</param>
            <param name="newOwnerId">The ID of the user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
            <returns></returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveRootFolderToAnotherUser(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EnterpriseUser,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="currentOwner">The user whose files will be moved</param>
            <param name="newOwner">The user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveRootFolderToAnotherUser(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Boolean)">
            <summary>
                Moves all of the content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions.
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed User operation</param>
            <param name="currentOwnerId">The ID of the user whose files will be moved</param>
            <param name="newOwnerId">The ID of the user to whom the files will be moved</param>
            <param name="notify">Whether to notify the currentOwner that their files are being moved</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetEmailAliases(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="user">The user for whom to retrieve the email aliases</param>
            <returns>A collection of email aliases</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetEmailAliases(System.String)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="userId">The ID of the user for whom to retrieve the email aliases</param>
            <returns>A collection of email aliases</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetEmailAliases(System.Action{BoxApi.V2.Model.EmailAliasCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="onSuccess">An action to perfrom with the email aliases</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="user">The user for whom to retrieve the email aliases</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetEmailAliases(System.Action{BoxApi.V2.Model.EmailAliasCollection},System.Action{BoxApi.V2.Model.Error},System.String)">
            <summary>
            Retrieves the email aliases for a user
            </summary>
            <param name="onSuccess">An action to perfrom with the email aliases</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the user for whom to retrieve the email aliases</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.AddEmailAlias(BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="user">The user to alias</param>
            <param name="alias">The email alias to add </param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.AddEmailAlias(System.String,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="userId">The ID of the user to alias</param>
            <param name="alias">The email alias to add </param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.AddEmailAlias(System.Action{BoxApi.V2.Model.EmailAlias},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation </param>
            <param name="user">The user to alias</param>
            <param name="alias">The email alias to add </param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.AddEmailAlias(System.Action{BoxApi.V2.Model.EmailAlias},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
            Add a new email alias for a user
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the user to alias</param>
            <param name="alias">The email alias to add </param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EmailAlias)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="user">The aliased user</param>
            <param name="alias">The alias to delete </param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteEmailAlias(System.String,System.String)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="userId">The ID of the aliased user</param>
            <param name="aliasId">The ID of the alias to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(System.Action,System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,BoxApi.V2.Model.EmailAlias)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="onSuccess">An action to perform following a successful delete</param>
            <param name="onFailure">An action to perform following a failed User operation </param>
            <param name="user">The aliased user</param>
            <param name="alias">The alias to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteEmailAlias(System.Action,System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
            Delete an email alias for a user
            </summary>
            <param name="onSuccess">An action to perform following a successful delete</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the aliased user</param>
            <param name="aliasId">The ID of the alias to delete</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ChangePrimaryLogin(BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="user">The user to update</param>
            <param name="login">The new login</param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ChangePrimaryLogin(System.String,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="userId">The ID of the user to update</param>
            <param name="login">The new login</param>
            <returns>The updated user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ChangePrimaryLogin(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="user">The user to update</param>
            <param name="login">The new login</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ChangePrimaryLogin(System.Action{BoxApi.V2.Model.EnterpriseUser},System.Action{BoxApi.V2.Model.Error},System.String,System.String)">
            <summary>
            Changes the primary login email to one of a user's confirmed aliases
            </summary>
            <param name="onSuccess">An action to perform with the updated user</param>
            <param name="onFailure">An action to perform following a failed User operation</param>
            <param name="userId">The ID of the user to update</param>
            <param name="login">The new login</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ConvertToStandaloneUser(BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            converts them to a standalone free user.
            </summary>
            <param name="user">The enterprise user to convert</param>
            <returns>The standalone user</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ConvertToStandaloneUser(System.Action{BoxApi.V2.Model.User},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.EnterpriseUser)">
            <summary>
            Rolls a user out of an enterprise and converts them to a standalone free user.
            </summary>
            <param name="onSuccess">Action to perform with the standalone user</param>
            <param name="onFailure">Action to perform following failed conversion</param>
            <param name="user">The enterprise user to convert</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.#ctor(System.String,System.Net.IWebProxy,BoxApi.V2.Model.Enum.BoxManagerOptions,System.String)">
            <summary>
                Creates a BoxManager client using the v2 authentication scheme
            </summary>
            <param name="oauth2AccessToken">The OAuth 2.0 access token for this user</param>
            <param name="proxy">HTTP proxy configuration information</param>
            <param name="options">Options to customize the behavior of the BoxManager</param>
            <param name="onBehalfOf">All operations will be performed on behalf of the user with this login.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.#ctor(System.String,System.String,System.Net.IWebProxy,BoxApi.V2.Model.Enum.BoxManagerOptions)">
            <summary>
                Creates a BoxManager client using the v1 authentication scheme
            </summary>
            <param name="v1ApiKey">The v1 API key for your Box app</param>
            <param name="v1AuthToken">The Box user's v1 auth token</param>
            <param name="proxy">HTTP proxy configuration information</param>
            <param name="options">Options to customize the behavior of the BoxManager</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Clone">
            <summary>
            Creates a new BoxManager from the existing one.
            </summary>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFolder(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="parent">The folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created folder.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="parentId">The ID of the folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The created folder.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created Folder</param>
            <param name="onFailure">Action to perform following a failed Folder creation</param>
            <param name="parent">The folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CreateFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Creates a new folder in the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the created folder</param>
            <param name="onFailure">Action to perform following a failed folder creation</param>
            <param name="parentId">The ID of he folder in which to create the folder</param>
            <param name="name">The folder's name</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="folder">The folder to get</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>The fetched folder.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Get(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="onSuccess">Action to perform with the retrieved Folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to get</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFolder(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="id">The ID of the folder to get</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>The fetched folder.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a shared folder
            </summary>
            <param name="id">The ID of the folder to get</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>The fetched folder.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="onSuccess">Action to perform with the retrieved Folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to get</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieves a folder
            </summary>
            <param name="onSuccess">Action to perform with the retrieved Folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to get</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent unnecessary response data if you already have the latest version of the item.  A BoxItemNotModifiedException will be thrown if the item is up to date.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetItems(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="folder">The folder containing the items to retrieve</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="limit">The maximum number of items to return in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The first item to fetch in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>A collection of items representing the folder's contents.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetItems(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="limit">The maximum number of items to return in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The first item to fetch in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>A collection of items representing the folder's contents.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetItems(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a shared folder's items
            </summary>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="limit">The maximum number of items to return in this request (max: 1000).  If limit and offset are both left null, all items will be fetched.</param>
            <param name="offset">The first item to fetch in this request. If limit and offset are both left null, all items will be fetched.</param>
            <returns>A collection of items representing the folder's contents.</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetItems(System.Action{BoxApi.V2.Model.ItemCollection},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="onSuccess">Action to perform with the folder's items</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder containing the items to retrieve</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (default: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request (default: 0).</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetItems(System.Action{BoxApi.V2.Model.ItemCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="onSuccess">Action to perform with the folder's items</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.GetItems(System.Action{BoxApi.V2.Model.ItemCollection},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Retrieve a folder's items
            </summary>
            <param name="onSuccess">Action to perform with the folder's items</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder containing the items to retrieve</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="limit">The maximum number of items to return with the folder's ItemCollection in this request (max: 1000).</param>
            <param name="offset">The item at which to start fetching the folder's ItemCollection in this request.</param>
            <param name="fields">The properties that should be set on the returned items.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(BoxApi.V2.Model.Folder,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="folder">The folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteFolder(System.String,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="id">The ID of the folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Delete(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="onSuccess">Action to perform when the folder is deleted</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DeleteFolder(System.Action{RestSharp.IRestResponse},System.Action{BoxApi.V2.Model.Error},System.String,System.Boolean,System.String)">
            <summary>
                Removes a folder from a user's Box
            </summary>
            <param name="onSuccess">Action to perform when the folder is deleted</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to delete</param>
            <param name="recursive">Remove a non-empty folder and all of its contents</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <exception cref="T:BoxApi.V2.BoxException">Thrown if folder is not empty and recursive is false.</exception>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="folder">The folder to copy</param>
            <param name="newParent">The destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="folder">The folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFolder(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="id">The ID of the folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFolder(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a shared folder to the specified folder
            </summary>
            <param name="id">The ID of the folder to copy</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <returns>The copied folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to copy</param>
            <param name="newParent">The destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Copy(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to copy</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.CopyFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField})">
            <summary>
                Copies a folder to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the copied folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to copy</param>
            <param name="sharedLinkUrl">The shared link for the folder</param>
            <param name="newParentId">The ID of the destination folder for the copied folder</param>
            <param name="newName">The optional new name for the copied folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareLink(BoxApi.V2.Model.Folder,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="folder">The folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An object populated with the shared link</returns>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareFolderLink(System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="id">The ID of the folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>An object populated with the shared link</returns>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the linked folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.ShareFolderLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,BoxApi.V2.Model.SharedLink,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Creates a shared link to the specified folder
            </summary>
            <param name="onSuccess">Action to perform with the linked folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder for which to create a shared link</param>
            <param name="sharedLink">The properties of the shared link</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <remarks>In order for Folder.SharedLink to be populated, you must either include Field.SharedLink in the fields list, or leave the list null</remarks>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DisableSharedLink(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="folder">The folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The folder with the disabled shared link</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DisableSharedLink(System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="id">The id of the folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The folder with the disabled shared link</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DisableSharedLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="onSuccess">Action to take with the returned folder</param>
            <param name="onFailure">Actino to take following a failed folder operation</param>
            <param name="folder">The folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.DisableSharedLink(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
            Disables the shared link for a folder
            </summary>
            <param name="onSuccess">Action to take with the returned folder</param>
            <param name="onFailure">Actino to take following a failed folder operation</param>
            <param name="id">The id of the folder whose shared link should be disabled.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="folder">The folder to move</param>
            <param name="newParent">The destination folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="folder">The folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="id">The ID of the folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The moved folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to move</param>
            <param name="newParent">The destination folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Move(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.MoveFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Moves a folder to the specified destination
            </summary>
            <param name="onSuccess">Action to perform with the moved folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to move</param>
            <param name="newParentId">The ID of the destination folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Rename(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="folder">The folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.RenameFolder(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="id">The ID of the folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The renamed folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Rename(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="onSuccess">Action to perform with the renamed folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.RenameFolder(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Renames a folder
            </summary>
            <param name="onSuccess">Action to perform with the renamed folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to rename</param>
            <param name="newName">The new name for the folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateDescription(BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Updates a folder's description
            </summary>
            <param name="folder">The folder to update</param>
            <param name="description">The new description for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateFolderDescription(System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Updates a folder's description
            </summary>
            <param name="id">The ID of the folder to update</param>
            <param name="description">The new description for the folder</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateDescription(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Updates a folder's description
            </summary>
            <param name="onSuccess">Action to perform with the updated folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to update</param>
            <param name="description">The new description for the folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.UpdateFolderDescription(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},System.String,System.String,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Updates a folder's description
            </summary>
            <param name="onSuccess">Action to perform with the updated folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="id">The ID of the folder to update</param>
            <param name="description">The new description for the folder</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Update one or more of a folder's name, description, parent, or shared link.
            </summary>
            <param name="folder">The folder to update</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
            <returns>The updated folder</returns>
        </member>
        <member name="M:BoxApi.V2.BoxManager.Update(System.Action{BoxApi.V2.Model.Folder},System.Action{BoxApi.V2.Model.Error},BoxApi.V2.Model.Folder,System.Collections.Generic.IEnumerable{BoxApi.V2.Model.Fields.FolderField},System.String)">
            <summary>
                Update one or more of a folder's name, description, parent, or shared link.
            </summary>
            <param name="onSuccess">Action to perform with the updated folder</param>
            <param name="onFailure">Action to perform following a failed operation</param>
            <param name="folder">The folder to update</param>
            <param name="fields">The properties that should be set on the returned Folder object.  Type and Id are always set.  If left null, all properties will be set, which can increase response time.</param>
            <param name="etag">Include the item's etag to prevent the completion of this operation if you don't have the must current version of the item.  A BoxItemModifiedException will be thrown if the item is stale.</param>
        </member>
        <member name="T:BoxApi.V2.Model.Collaboration">
            <summary>
                Collaborations are Box’s equivalent of access control lists. They let you set and apply permissions for users to folders.
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.ModifiableEntity">
            <summary>
                An item that can be changed over time.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.IdentifiedEntity.Id">
            <summary>
                The item's ID
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Entity.Name">
            <summary>
                The name of the item
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.ModifiableEntity.CreatedBy">
            <summary>
                The user who created this item
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.ModifiableEntity.CreatedAt">
            <summary>
                The time this item was created
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.ModifiableEntity.ModifedBy">
            <summary>
                The time this item (or its contents) were last modified
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.ModifiableEntity.ModifiedAt">
            <summary>
                The user who last modified this item
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.ModifiableEntity.OwnedBy">
            <summary>
                The user who owns this item
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.ExpiresAt">
            <summary>
                The time this collaboration will automatically expire
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.Role">
            <summary>
                This value is for serialization only.  Use RoleValue for the proper enumeration.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.RoleValue">
            <summary>
                The level of access this user has to the folder.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.Item">
            <summary>
                The folder in which this collaboration is taking place
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.AccessibleBy">
            <summary>
                The user with whom the collaboration exists
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.AcknowledgedAt">
            <summary>
                When the collaborating user acknowledged their role and status
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.Status">
            <summary>
                Whether the user has Accepted or Rejected their role in the collaboration
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collaboration.SequenceId">
            <summary>
                A unique ID for use with the /events endpoint
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.CollaborationCollection">
            <summary>
                A list of collaborations attached to a folder
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collection`1.TotalCount">
            <summary>
                Count of Entries
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Collection`1.Entries">
            <summary>
                A collection of T items
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.CommentCollection">
            <summary>
                A collection of comments attached to a file or discussion
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Discussion">
            <summary>
                Discussions are sets of comments related to a single folder. Each folder can have multiple discussions, and discussions can contain multiple comments.
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.HierarchyEntity">
            <summary>
                An item that exists as part of a hierarchy tree.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Version.Size">
            <summary>
                The item size in bytes
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.HierarchyEntity.SequenceId">
            <summary>
                A unique ID for use with the /events endpoint
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.HierarchyEntity.Description">
            <summary>
                The description of the item
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.HierarchyEntity.Parent">
            <summary>
                The folder that contains this item
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.HierarchyEntity.PathCollection">
            <summary>
            The path of folders to this item, starting at the root
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.HierarchyEntity.Etag">
            <summary>
                A unique string identifying the version of this file.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.HierarchyEntity.SharedLink">
            <summary>
                If this file has been shared by another user
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.DiscussionCollection">
            <summary>
                A collection of discussions attached to a folder
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.EmailAlias">
            <summary>
            Represents an email alias for a user
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EmailAlias.Email">
            <summary>
            The alias
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EmailAlias.IsConfirmed">
            <summary>
            Whether the user has confirmed this alias
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.EmailAliasCollection">
            <summary>
            A collection of user email aliases
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.EnterpriseUser">
            <summary>
                Provides information about a Box user that is a member of an enterprise
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.User">
            <summary>
                Provides information about a Box user
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.UserEntity.Login">
            <summary>
                The login/email address of the user
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.CreatedAt">
            <summary>
                The time this user was created
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.ModifiedAt">
            <summary>
                The time this user was last modified
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.SpaceUsed">
            <summary>
                The amount of space in use by the user in bytes
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.MaxUploadSize">
            <summary>
                The maximum individual file size in bytes this user can have
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.AvatarUrl">
            <summary>
                The URL for the user's avatar image
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.SpaceAmount">
            <summary>
                The user’s total available space amount in bytes
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.Language">
            <summary>
                The user's preferred language
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.Status">
            <summary>
                The status of the user's account
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.JobTitle">
            <summary>
                The user's job title
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.Phone">
            <summary>
                The user's phone number
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.User.Address">
            <summary>
                The user's street address
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseUser.Role">
            <summary>
                If the user is part of an enterprise, then this will reflect whether they are a regular user or an admin.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseUser.TrackingCodes">
            <summary>
                An array of key/value pairs set by the user’s admin
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseUser.CanSeeManagedUsers">
            <summary>
                Whether this user can see other enterprise users in its contact list
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseUser.IsSyncEnabled">
            <summary>
                Whether or not this user can use Box Sync
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseUser.IsExemptFromDeviceLimits">
            <summary>
                Whether to exempt this user from Enterprise device limits
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseUser.IsExemptFromLoginVerification">
            <summary>
                Whether or not this user must use two-factor authentication
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseUser.IsPasswordResetRequired">
            <summary>
                Whether or not the user is required to reset password
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Enum.BoxManagerOptions">
            <summary>
            Options for customizing the behavior of the BoxManager.
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.BoxManagerOptions.None">
            <summary>
            No options requested
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.BoxManagerOptions.RetryRequestOnceWhenHttp500Received">
            <summary>
            Any request that receives an HTTP 500 (Internal Server Error) response should be retried once.
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Enum.CollaborationRole">
            <summary>
                The roles that can be applied to a collaborating user
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.Undefined">
            <summary>
            Undefined role.
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.Editor">
            <summary>
                An Editor has full read/ write access to a folder. They can view and download
                the contents of the folder, as well as upload new content into the folder. They
                have permission to delete items, edit items, comment of files, generate a shared
                link for items in the folder, and create tags. By default an Editor will be able
                to invite new collaborators to a folder, however an editor cannot manage users
                currently existing in the folder.
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.Viewer">
            <summary>
                A Viewer has full read access to a folder. So they will be able to preview any
                item using the integrated content viewer, and will be able to download any item in
                the folder. A Viewer can generate a shared link for any item in the folder as well
                as make comments on items. A viewer will not be able to add tags, invite new
                collaborators, upload, or edit items in the folder.
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.Previewer">
            <summary>
                A Previewer only has limited read access. This permission level allows a user to view
                the items in the folder using the integrated content viewer or a viewing application
                from the OpenBox directory such as Scribd. They will have no other access to the files
                and will not be able to download, edit, or upload into the folder.
            </summary>
            <remarks>
                Limited to Business and Enterprise accounts
            </remarks>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.Uploader">
            <summary>
                An Uploader is the most limited access that a user can have in a folder and provides
                limited write access. A user assigned uploader will see the items in a folder but will
                not be able to download or view the items. The only action available will be to upload
                content into the folder. If an Uploader uploads an item with the same name as an
                existing item in the folder, the file will be updated and the existing version will be
                moved into the version history.
            </summary>
            <remarks>
                Limited to Business and Enterprise accounts
            </remarks>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.PreviewerUploader">
            <summary>
                This access level is a combination of Previewer and Uploader. A user with this access
                level will be able to preview files in the folder using the integrated content viewer or
                a viewing application from the OpenBox directory such as Scribd and will also be able to
                upload items into the folder. If a Previewer-Uploader uploads an item with the same name
                as an existing item in the folder, the file will be updated and the existing version will
                be moved into the version history. They will have no other access to the files and will
                not be able to download or edit items in the folder.
            </summary>
            <remarks>
                Limited to Business and Enterprise accounts
            </remarks>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.ViewerUploader">
            <summary>
                This access level is a combination of Viewer and Uploader. A Viewer-Uploader has full
                read access to a folder and limited write access. They will be able to preview any item
                using the integrated content viewer, and will be able to download any item in the folder.
                They can generate a shared link for any item in the folder as well as make comments on
                items. A Viewer-Uploader will also be able to upload content into the folder. If a
                Viewer-Uploader uploads an item with the same name as an existing item in the folder,
                the file will be updated and the existing version will be moved into the version history.
                They will not be able to add tags, invite new collaborators, or edit items in the folder.
            </summary>
            <remarks>
                Limited to Business and Enterprise accounts
            </remarks>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.CollaborationRole.CoOwner">
            <summary>
                A Co-Owner has all of the functional read/ write access that an Editor does. This
                permission level has the added ability of being able to manage users in the folder.
                A Co-Owner can add new collaborators, change collaborators access, and remove
                collaborators (they will not be able to manipulate the owner of the folder or transfer
                ownership to another user).
            </summary>
            <remarks>
                Limited to Business and Enterprise accounts
            </remarks>
        </member>
        <member name="T:BoxApi.V2.Model.Enum.EnterpriseEventType">
            <summary>
                Events that are tracked at the enterprise level
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.GroupAddUser">
            <summary>
                Added user to group
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.NewUser">
            <summary>
                Created user
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.GroupCreation">
            <summary>
                Created new group
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.GroupDeletion">
            <summary>
                Deleted group
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.DeleteUser">
            <summary>
                Deleted user
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.GroupEdited">
            <summary>
                Edited group
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.EditUser">
            <summary>
                Edited user
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.GroupAddFolder">
            <summary>
                Granted folder access
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.GroupRemoveUser">
            <summary>
                Removed user from group
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.GroupRemoveFolder">
            <summary>
                Removed folder access from group
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.AddTrustedDevice">
            <summary>
                Added trusted application
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.AdminLogin">
            <summary>
                Administrative login
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.AddDeviceAssociation">
            <summary>
                Added device assocation
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.FailedLogin">
            <summary>
                Failed login
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Login">
            <summary>
                Logged in
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.RemoveTrustedDevice">
            <summary>
                Removed trusted application
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.RemoveDeviceAssociation">
            <summary>
                Removed device association
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.TermsOfServiceAgree">
            <summary>
                Agreed to terms of service
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.TermsOfServiceReject">
            <summary>
                Rejected terms of service
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Copy">
            <summary>
                Item copied
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Delete">
            <summary>
                Item deleted
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Download">
            <summary>
                Item downloaded
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Edit">
            <summary>
                Item edited
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Lock">
            <summary>
                Item locked
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Move">
            <summary>
                Item moved
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Preview">
            <summary>
                Item previewed
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Rename">
            <summary>
                Item renamed
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.StorageExpiration">
            <summary>
                Set file auto-delete
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Undelete">
            <summary>
                Item undeleted
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Unlock">
            <summary>
                Item unlocked
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Upload">
            <summary>
                Item uploaded
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Share">
            <summary>
                Item shared
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.UpdateShareExpiration">
            <summary>
                Extend shared link expiration
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.ShareExpiration">
            <summary>
                Set shared link expiration
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.Unshare">
            <summary>
                Unshared links
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.CollaborationAccept">
            <summary>
                Accepted collaboration invitation
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.CollaborationRoleChange">
            <summary>
                Changed user's collaboration role
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.UpdateCollaborationExpiration">
            <summary>
                Extended collaboration expiration
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.CollaborationRemove">
            <summary>
                Removed collaborators
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.CollaborationInvite">
            <summary>
                Invited collaborators
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.CollaborationExpiration">
            <summary>
                Set collaboration expiration
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.ItemSync">
            <summary>
                Synced folder
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.EnterpriseEventType.ItemUnsync">
            <summary>
                Unsynced folder
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Enum.StandardEventType">
            <summary>
                Events that are tracked at the user level
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemCreate">
            <summary>
                A folder or File was created
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemUpload">
            <summary>
                A folder or File was uploaded
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.CommentCreate">
            <summary>
                A comment was created on a folder, file, discussion, or other comment
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemDownload">
            <summary>
                A file or folder was downloaded
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemPreview">
            <summary>
                A file was previewed
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemMove">
            <summary>
                A file or folder was moved
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemCopy">
            <summary>
                A file or folder was copied
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.TaskAssignmentCreate">
            <summary>
                A task was assigned
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.LockCreate">
            <summary>
                A file was locked
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.LockDestroy">
            <summary>
                A file was unlocked
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemTrash">
            <summary>
                A file or folder was marked as deleted
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemUndeleteViaTrash">
            <summary>
                A file or folder was recovered out of the trash
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.CollabAddCollaborator">
            <summary>
                A collaborator was added to a folder
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.CollabInviteCollaborator">
            <summary>
                A collaborator was invited on a folder
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemSync">
            <summary>
                A folder was marked for sync
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemUnsync">
            <summary>
                A folder was un-marked for sync
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemRename">
            <summary>
                A file or folder was renamed
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemSharedCreate">
            <summary>
                A file or folder was enabled for sharing
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemSharedUnshare">
            <summary>
                A file or folder was disabled for sharing
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.ItemShared">
            <summary>
                A folder was shared
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StandardEventType.TagItemCreate">
            <summary>
                A Tag was added to a file or folder
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StreamType.All">
            <summary>
                Returns all event types
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StreamType.Changes">
            <summary>
                Returns tree changes
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StreamType.Sync">
            <summary>
                Returns tree changes only for sync folders
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.StreamType.AdminLogs">
            <summary>
                Returns administrative events for Enterprise accounts.
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.SyncState.Unknown">
            <summary>
            The sync state of the folder has not been requested
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.SyncState.NotSynced">
            <summary>
            The folder is not synced with the server
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.SyncState.PartiallySynced">
            <summary>
            The folder is partially synced with the server
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.SyncState.Synced">
            <summary>
            The folder is fully synced with the server
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.ThumbnailSize.Small">
            <summary>
                A 32x32 pixel thumbnail
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.ThumbnailSize.Medium">
            <summary>
                A 64x64 pixel thumbnail
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.ThumbnailSize.Large">
            <summary>
                A 128x128 thumbnail
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.ThumbnailSize.Jumbo">
            <summary>
                A 256x256 thumbnail
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Enum.UserStatus">
            <summary>
            Describes the current status of an Enterprise user
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.UserStatus.Active">
            <summary>
            User is active within the Enterprise
            </summary>
        </member>
        <member name="F:BoxApi.V2.Model.Enum.UserStatus.Inactive">
            <summary>
            User is not active within the Enterprise
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.ErrorCollection">
            <summary>
                A cpollection of errors returned during an operation
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.EventCollection`1">
            <summary>
                A collection of events.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EventCollection`1.ChunkSize">
            <summary>
                The number of event records returned
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EventCollection`1.NextStreamPosition">
            <summary>
                The next position in the event stream that you should request in order to get the next events
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EventCollection`1.Entries">
            <summary>
                A collection of events that occured
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.UserEventCollection">
            <summary>
                A collection of events scoped to a single user's account
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.EnterpriseEventCollection">
            <summary>
                A collection of events scoped to users in an enterprise
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Event">
            <summary>
                Information on a specific event that occured.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Event.EventId">
            <summary>
                The id of the event, used for de-duplication purposes
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Event.CreatedBy">
            <summary>
                The user that performed the action
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Event.CreatedAt">
            <summary>
                The time this item was created
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Event.SessionId">
            <summary>
                The session of the user that performed the action
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Event.Source">
            <summary>
                Information about the object that was modified.  This may be a subset of all properties that exist for a particular type of object.
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.UserEvent">
            <summary>
                An event that occured in a user's account
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.UserEvent.EventType">
            <summary>
                The nature of the event
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.EnterpriseEvent">
            <summary>
                An event that occured in an enterprise
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.EnterpriseEvent.EventType">
            <summary>
                The nature of the event
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.FolderUploadEmail">
            <summary>
            The upload email address for this folder
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.FolderUploadEmail.Access">
            <summary>
            The upload accessibility of this folder
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.FolderUploadEmail.Email">
            <summary>
            The email address to which content can be sent
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.MiniFolderEntity">
            <summary>
            A mini-folder for use in determining paths
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.MiniFolderEntity.SequenceId">
            <summary>
                A unique ID for use with the /events endpoint
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.MiniFolderEntity.Etag">
            <summary>
                A unique string identifying the version of this file.
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.PathCollection">
            <summary>
            The path of folders to an item, starting at the root
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.SearchResultCollection">
            <summary>
            The search results of a user's Box
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SearchResultCollection.Offset">
            <summary>
            The search result at which the response was started
            </summary>
        </member>
        <member name="T:BoxApi.V2.BoxException">
            <summary>
                Describes an error that occured when performing a request to the Box API
            </summary>
        </member>
        <member name="M:BoxApi.V2.BoxException.#ctor(BoxApi.V2.Model.Error)">
            <summary>
                Creates a BoxException instance
            </summary>
            <param name="error">The error returned by Box following the failed API call</param>
        </member>
        <member name="P:BoxApi.V2.BoxException.HttpStatusCode">
            <summary>
                The HTTP status code of the error (eg, 500)
            </summary>
        </member>
        <member name="P:BoxApi.V2.BoxException.ShortDescription">
            <summary>
                A short description of the error
            </summary>
        </member>
        <member name="P:BoxApi.V2.BoxException.Message">
            <summary>
                A full description of the error
            </summary>
        </member>
        <member name="P:BoxApi.V2.BoxException.RetryAfter">
            <summary>
                The number of seconds after which this request can be retried (0 = immediately)
            </summary>
        </member>
        <member name="P:BoxApi.V2.BoxException.Error">
            <summary>
                The raw error information, as return by Box
            </summary>
        </member>
        <member name="T:BoxApi.V2.BoxItemModifiedException">
            <summary>
                A special case exception for when the operation failed an If-Match precondition check.  This exception indicates that the target item has been modified since it was last retrieved.
            </summary>
        </member>
        <member name="M:BoxApi.V2.BoxItemModifiedException.#ctor(BoxApi.V2.Model.Error)">
            <summary>
                Creates a BoxPreconditionException instance
            </summary>
            <param name="error">The error returned by Box following the failed API call</param>
        </member>
        <member name="T:BoxApi.V2.BoxItemNotModifiedException">
            <summary>
                A special case exception for when the operation failed an If-Not-Match precondition check.  This exception indicates that the requested item or collection has not been modified.
            </summary>
        </member>
        <member name="M:BoxApi.V2.BoxItemNotModifiedException.#ctor(BoxApi.V2.Model.Error)">
            <summary>
                Creates a BoxItemNotModifiedException instance
            </summary>
            <param name="error">The error returned by Box following the failed API call</param>
        </member>
        <member name="T:BoxApi.V2.BoxDownloadNotReadyException">
            <summary>
                A special case exception for when the requested file is not yet ready for download.  Wait at least the amount of seconds specified in 'RetryAfter' before trying again. 
            </summary>
        </member>
        <member name="M:BoxApi.V2.BoxDownloadNotReadyException.#ctor(BoxApi.V2.Model.Error)">
            <summary>
                Creates a BoxDownloadNotReadyException instance
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Comment">
            <summary>
                Comments are messages generated by Box users. Each message is tied to specific files or discussions. You can create comments independently or create them as responses to other comments.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Comment.IsReplyComment">
            <summary>
                Whether or not this comment is a reply to another comment
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Comment.Message">
            <summary>
                The comment text
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Comment.TaggedMessage">
            <summary>
                The string representing the comment text with @mentions included. @mention format is @[id:username]. Field is not included by default.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Comment.Item">
            <summary>
                The object this comment was placed on
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Comment.SequenceId">
            <summary>
                A unique ID for use with the /events endpoint
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Error">
            <summary>
                2xx: The request was successfully received, understood, and accepted
                3xx: Further action needs to be taken by the user agent in order to fulfill the request
                4xx: An error in the request. Usually a bad parameter.
                5xx: The request is fine, but something is wrong on Box’s end
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Error.Status">
            <summary>
                the HTTP status of the error response
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Error.Code">
            <summary>
                the HTTP code of the error response
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Error.HelpUrl">
            <summary>
                a URL linking to more information about why this error occurred
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Error.Message">
            <summary>
                a human readable message about the error that can be passed back to your user
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Error.RequestId">
            <summary>
                a unique ID for this request helpful for troubleshooting
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Error.RetryAfter">
            <summary>
                the amount of time after which this request can be tried again
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.File">
            <summary>
                A Box file.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.File.Sha1">
            <summary>
                The sha1 hash of this file
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.File.ContentCreatedAt">
            <summary>
                When the content of this file was created
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.File.ContentModifiedAt">
            <summary>
                When the content of this file was last modified
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Folder">
            <summary>
                A Box folder, which can contain files and other folders
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Folder.ItemCollection">
            <summary>
                An array of file or folder objects contained in this folder
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Folder.FolderUploadEmail">
            <summary>
            The upload email address for this folder
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Folder.Files">
            <summary>
                The files contained within this folder
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Folder.SyncState">
            <summary>
            Whether this folder will be synced by the Box sync clients or not.  This field is not returned by default; it must be explicitly requested via the 'fields' parameter.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Folder.Folders">
            <summary>
                The subfolders contained within this folder
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.ItemCollection">
            <summary>
                Detailed information about a folder's contents
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.Permissions">
            <summary>
                The set of permissions that apply to a SharedLink
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Permissions.CanDownload">
            <summary>
                Whether this link allows downloads
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.Permissions.CanPreview">
            <summary>
                Whether this link allows previews
            </summary>
        </member>
        <member name="T:BoxApi.V2.Model.SharedLink">
            <summary>
                An object representing this item’s shared link and associated permissions
            </summary>
        </member>
        <member name="M:BoxApi.V2.Model.SharedLink.#ctor">
            <summary>
                Parameterless constructor required for deserialization
            </summary>
        </member>
        <member name="M:BoxApi.V2.Model.SharedLink.#ctor(BoxApi.V2.Model.Enum.Access,System.Nullable{System.DateTime},BoxApi.V2.Model.Permissions)">
            <summary>
                Creates a SharedLink to associate with a File or folder
            </summary>
            <param name="access">With whom the item should be shared</param>
            <param name="unsharedAt">Automatically stop sharing at this time</param>
            <param name="permissions">The </param>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.Access">
            <summary>
                The level of access required for this shared link. Can be: Open, Company, Collaborators.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.UnsharedAt">
            <summary>
                The day that this link should be disabled at. Timestamps are rounded off to the given day.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.Permissions">
            <summary>
                The set of permissions that apply to this shared item
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.Url">
            <summary>
                The URL to be used when requesting information about this item.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.DownloadUrl">
            <summary>
                The URL from which this item can be downloaded.
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.IsPasswordEnabled">
            <summary>
                Whether this item is password-protected
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.DownloadCount">
            <summary>
                The number of times this item has been downloaded
            </summary>
        </member>
        <member name="P:BoxApi.V2.Model.SharedLink.PreviewCount">
            <summary>
                The number of times this item has been previewed
            </summary>
        </member>
        <member name="T:BoxApi.V2.Serialization.AttributableJsonSerializer">
            <summary>
                Default JSON serializer for request bodies
                Doesn't currently use the SerializeAs attribute, defers to Newtonsoft's attributes
            </summary>
        </member>
        <member name="M:BoxApi.V2.Serialization.AttributableJsonSerializer.#ctor">
            <summary>
                Default serializer
            </summary>
        </member>
        <member name="M:BoxApi.V2.Serialization.AttributableJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializer)">
            <summary>
                Default serializer with overload for allowing custom Json.NET settings
            </summary>
        </member>
        <member name="M:BoxApi.V2.Serialization.AttributableJsonSerializer.Serialize(System.Object)">
            <summary>
                Serialize the object as JSON
            </summary>
            <param name="obj">Object to serialize</param>
            <returns>JSON as String</returns>
        </member>
        <member name="P:BoxApi.V2.Serialization.AttributableJsonSerializer.DateFormat">
            <summary>
                Unused for JSON Serialization
            </summary>
        </member>
        <member name="P:BoxApi.V2.Serialization.AttributableJsonSerializer.RootElement">
            <summary>
                Unused for JSON Serialization
            </summary>
        </member>
        <member name="P:BoxApi.V2.Serialization.AttributableJsonSerializer.Namespace">
            <summary>
                Unused for JSON Serialization
            </summary>
        </member>
        <member name="P:BoxApi.V2.Serialization.AttributableJsonSerializer.ContentType">
            <summary>
                Content type for serialized content
            </summary>
        </member>
    </members>
</doc>
